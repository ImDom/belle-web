{"version":3,"file":"index.c0c6010b.js","sources":["../../vite/modulepreload-polyfill","../../src/lib/constants.ts","../../src/lib/Datapoint.ts","../../src/lib/Track.ts","../../src/Map.tsx","../../src/lib/types.ts","../../src/Chart2.tsx","../../src/test.csv?raw","../../src/Load.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","export const A_GRAVITY = 9.80665; // Standard acceleration due to gravity (m/s^2)\nexport const SL_PRESSURE = 101325; // Sea level pessure (Pa)\nexport const LAPSE_RATE = 0.0065; // Temperature lapse rate (K/m)\nexport const SL_TEMP = 288.15; // Sea level temperature (K)\nexport const MM_AIR = 0.0289644; // Molar mass of dry air (kg/mol)\nexport const GAS_CONST = 8.31447; // Universal gas constant (J/mol/K)\n","import { getDistance } from 'ol/sphere';\nimport { A_GRAVITY } from './constants';\n\nexport interface RawFlysight {\n    time: string; // Time in ISO8601 format\n    lat: string; // Latitude (degrees)\n    lon: string; // Longitude (degrees)\n    hMSL: string; // Height above sea level (m)\n    velN: string; // Velocity north (m/s)\n    velE: string; // Velocity east (m/s)\n    velD: string; // Velocity down (m/s)\n    hAcc: string; // Horizontal accuracy (m)\n    vAcc: string; // Vertical accuracy (m)\n    sAcc: string; // Speed accuracy (m/s)\n    gpsFix: string; // GPS fix type (3 = 3D)\n    numSV: string; // Number of satellites used in fix\n}\n\nexport class Datapoint {\n    public dateTime!: Date;\n\n    public hasGeodetic!: boolean;\n\n    public lat!: number;\n    public lon!: number;\n    public hMSL!: number;\n\n    public velN!: number;\n    public velE!: number;\n    public velD!: number;\n\n    public hAcc!: number;\n    public vAcc!: number;\n    public sAcc!: number;\n\n    public heading!: number;\n    public cAcc!: number;\n\n    public numSV!: number;\n\n    public t!: number;\n    public x!: number;\n    public y!: number;\n    public z!: number;\n\n    public dist2D!: number;\n    public dist3D!: number;\n\n    public curv!: number;\n    public accel!: number;\n\n    public ax!: number;\n    public ay!: number;\n    public az!: number;\n    public amag!: number;\n\n    public lift!: number;\n    public drag!: number;\n\n    public vx!: number; // Wind-corrected velocity\n    public vy!: number;\n\n    public theta!: number;\n    public omega!: number;\n\n    constructor(public raw?: RawFlysight) {\n        if (this.raw) {\n            this.hasGeodetic = true;\n\n            this.dateTime = new Date(this.raw.time);\n\n            this.lat = parseFloat(this.raw.lat);\n            this.lon = parseFloat(this.raw.lon);\n            this.hMSL = parseFloat(this.raw.hMSL);\n\n            this.velN = parseFloat(this.raw.velN);\n            this.velE = parseFloat(this.raw.velE);\n            this.velD = parseFloat(this.raw.velD);\n\n            this.hAcc = parseFloat(this.raw.hAcc);\n            this.vAcc = parseFloat(this.raw.vAcc);\n            this.sAcc = parseFloat(this.raw.sAcc);\n\n            this.numSV = parseInt(this.raw.numSV, 10);\n        }\n    }\n\n    get elevation(): number {\n        return this.z;\n    }\n\n    get northSpeed(): number {\n        return this.vy;\n    }\n\n    get eastSpeed(): number {\n        return this.vx;\n    }\n\n    get northSpeedRaw(): number {\n        return this.velN;\n    }\n\n    get eastSpeedRaw(): number {\n        return this.velE;\n    }\n\n    get verticalSpeed(): number {\n        return this.velD;\n    }\n\n    get horizontalSpeed() {\n        return Math.sqrt(this.vx * this.vx + this.vy * this.vy);\n    }\n\n    get totalSpeed(): number {\n        return Math.sqrt(this.vx * this.vx + this.vy * this.vy + this.velD * this.velD);\n    }\n\n    get diveAngle(): number {\n        // const pi = 3.14159265359;\n        return (Math.atan2(this.velD, Math.sqrt(this.vx * this.vx + this.vy * this.vy)) / Math.PI) * 180;\n    }\n\n    get curvature() {\n        return this.curv;\n    }\n\n    get glideRatio(): number {\n        if (this.velD != 0) return Math.sqrt(this.vx * this.vx + this.vy * this.vy) / this.velD;\n        else return 0;\n    }\n\n    get horizontalAccuracy(): number {\n        return this.hAcc;\n    }\n\n    get verticalAccuracy(): number {\n        return this.vAcc;\n    }\n\n    get speedAccuracy(): number {\n        return this.sAcc;\n    }\n\n    get numberOfSatellites(): number {\n        return this.numSV;\n    }\n\n    get time(): number {\n        return this.t;\n    }\n\n    get distance2D(): number {\n        return this.dist2D;\n    }\n\n    get distance3D(): number {\n        return this.dist3D;\n    }\n\n    get acceleration(): number {\n        return this.accel;\n    }\n\n    get accForward(): number {\n        return this.ax;\n    }\n\n    get accRight(): number {\n        return this.ay;\n    }\n\n    get accDown(): number {\n        return this.az;\n    }\n\n    get accMagnitude(): number {\n        return this.amag;\n    }\n\n    get totalEnergy(): number {\n        const v = this.totalSpeed;\n        return (v * v) / 2 + A_GRAVITY * this.elevation;\n    }\n\n    get energyRate(): number {\n        return this.totalSpeed * this.acceleration - A_GRAVITY * this.verticalSpeed;\n    }\n\n    get liftCoefficient(): number {\n        return this.lift;\n    }\n\n    get dragCoefficient(): number {\n        return this.drag;\n    }\n\n    get course(): number {\n        return this.theta;\n    }\n\n    get courseRate(): number {\n        return this.omega;\n    }\n\n    get courseAccuracy(): number {\n        return this.cAcc;\n    }\n\n    static interpolate(p1: Datapoint, p2: Datapoint, a: number) {\n        const ret = new Datapoint();\n\n        const ms1 = p1.dateTime.getTime();\n        const ms2 = p2.dateTime.getTime();\n        ret.dateTime = new Date();\n        ret.dateTime.setTime(ms1 + a * (ms2 - ms1));\n\n        ret.hasGeodetic = p1.hasGeodetic && p2.hasGeodetic;\n\n        ret.lat = p1.lat + a * (p2.lat - p1.lat);\n        ret.lon = p1.lon + a * (p2.lon - p1.lon);\n        ret.hMSL = p1.hMSL + a * (p2.hMSL - p1.hMSL);\n\n        ret.velN = p1.velN + a * (p2.velN - p1.velN);\n        ret.velE = p1.velE + a * (p2.velE - p1.velE);\n        ret.velD = p1.velD + a * (p2.velD - p1.velD);\n\n        ret.hAcc = p1.hAcc + a * (p2.hAcc - p1.hAcc);\n        ret.vAcc = p1.vAcc + a * (p2.vAcc - p1.vAcc);\n        ret.sAcc = p1.sAcc + a * (p2.sAcc - p1.sAcc);\n\n        if (a < 0.5) ret.numSV = p1.numSV;\n        else ret.numSV = p2.numSV;\n\n        ret.t = p1.t + a * (p2.t - p1.t);\n        ret.x = p1.x + a * (p2.x - p1.x);\n        ret.y = p1.y + a * (p2.y - p1.y);\n        ret.z = p1.z + a * (p2.z - p1.z);\n\n        ret.dist2D = p1.dist2D + a * (p2.dist2D - p1.dist2D);\n        ret.dist3D = p1.dist3D + a * (p2.dist3D - p1.dist3D);\n\n        ret.curv = p1.curv + a * (p2.curv - p1.curv);\n        ret.accel = p1.accel + a * (p2.accel - p1.accel);\n\n        ret.ax = p1.ax + a * (p2.ax - p1.ax);\n        ret.ay = p1.ay + a * (p2.ay - p1.ay);\n        ret.az = p1.az + a * (p2.az - p1.az);\n        ret.amag = p1.amag + a * (p2.amag - p1.amag);\n\n        ret.lift = p1.lift + a * (p2.lift - p1.lift);\n        ret.drag = p1.drag + a * (p2.drag - p1.drag);\n\n        ret.heading = p1.heading + a * (p2.heading - p1.heading);\n        ret.cAcc = p1.cAcc + a * (p2.cAcc - p1.cAcc);\n\n        ret.vx = p1.vx + a * (p2.vx - p1.vx);\n        ret.vy = p1.vy + a * (p2.vy - p1.vy);\n\n        ret.theta = p1.theta + a * (p2.theta - p1.theta);\n        ret.omega = p1.omega + a * (p2.omega - p1.omega);\n\n        return ret;\n    }\n\n    static getDistance(dp1: Datapoint, dp2: Datapoint, windAdjustment: boolean): number {\n        if (!windAdjustment && dp1.hasGeodetic && dp2.hasGeodetic) {\n            return getDistance([dp1.lat, dp1.lon], [dp2.lat, dp2.lon]);\n        } else {\n            const dx = dp2.x - dp1.x;\n            const dy = dp2.y - dp1.y;\n\n            return Math.sqrt(dx * dx + dy * dy);\n        }\n    }\n\n    static getBearing(dp1: Datapoint, dp2: Datapoint, windAdjustment: boolean): number {\n        if (!windAdjustment && dp1.hasGeodetic && dp2.hasGeodetic) {\n            const azi1 = getDistance([dp1.lat, 0], [dp2.lat, 0]);\n            const azi2 = getDistance([0, dp1.lon], [0, dp2.lon]);\n\n            return (azi1 / 180) * Math.PI;\n        } else {\n            const dx = dp2.x - dp1.x;\n            const dy = dp2.y - dp1.y;\n\n            return Math.atan2(dx, dy);\n        }\n    }\n}\n","import Papa from 'papaparse';\nimport { A_GRAVITY, GAS_CONST, LAPSE_RATE, MM_AIR, SL_PRESSURE, SL_TEMP } from './constants';\nimport { Datapoint, RawFlysight } from './Datapoint';\n\nenum GroundReference {\n    Automatic,\n    Manual,\n}\n\ninterface Wind {\n    east: number;\n    north: number;\n}\n\ninterface WindSpeedDirection {\n    speed: number;\n    direction: number;\n}\n\nexport class Track {\n    options = {\n        groundReference: GroundReference.Automatic,\n        fixedReference: 0,\n        windAdjustment: false,\n        windE: 0,\n        windN: 0,\n        mass: 90,\n        planformArea: 2,\n    };\n\n    wind?: Wind;\n    ground?: number;\n    course?: number;\n\n    datapoints: Datapoint[] = [];\n\n    importFromText(text: string): void {\n        const parsed = Papa.parse<RawFlysight>(text, {\n            header: true,\n            skipEmptyLines: true,\n        });\n        parsed.data.forEach((rawPoint) => {\n            if (!rawPoint.time) return;\n            this.datapoints.push(new Datapoint(rawPoint));\n        });\n\n        this.initTime();\n        this.initAltitude();\n        this.initAcceleration();\n\n        this.updateVelocity(true);\n\n        console.log('Track:', this);\n    }\n\n    initTime() {\n        const start = this.datapoints[0].dateTime.getTime();\n        this.datapoints.forEach((point, i) => {\n            const end = point.dateTime.getTime();\n            point.t = (end - start) / 1000;\n        });\n    }\n\n    initExit() {}\n\n    initAltitude() {\n        let ground: number;\n\n        if (this.ground) {\n            ground = this.ground;\n        } else if (this.options.groundReference === GroundReference.Automatic) {\n            ground = this.datapoints[this.datapoints.length - 1].hMSL;\n        } else {\n            ground = this.options.fixedReference;\n        }\n\n        this.ground = ground;\n\n        this.datapoints.forEach((point, i) => {\n            point.z = point.hMSL - ground;\n        });\n    }\n\n    initAcceleration() {\n        this.datapoints.forEach((datapoint, i) => {\n            // Acceleration\n            const accelN = this.getSlope(i, datapoint.northSpeedRaw);\n            const accelE = this.getSlope(i, datapoint.eastSpeedRaw);\n            const accelD = this.getSlope(i, datapoint.verticalSpeed);\n\n            // Calculate acceleration in direction of flight\n            const vh = Math.sqrt(datapoint.velN * datapoint.velN + datapoint.velE * datapoint.velE);\n            datapoint.ax = (accelN * datapoint.velN + accelE * datapoint.velE) / vh;\n\n            // Calculate acceleration perpendicular to flight\n            datapoint.ay = (accelE * datapoint.velN - accelN * datapoint.velE) / vh;\n\n            // Calculate vertical acceleration\n            datapoint.az = accelD;\n\n            // Calculate total acceleration\n            datapoint.amag = Math.sqrt(accelN * accelN + accelE * accelE + accelD * accelD);\n        });\n    }\n\n    initAerodynamics() {\n        this.datapoints.forEach((dp, i) => {\n            // Acceleration\n            let accelN = this.getSlope(i, dp.northSpeed);\n            let accelE = this.getSlope(i, dp.eastSpeed);\n            let accelD = this.getSlope(i, dp.verticalSpeed);\n\n            // Subtract acceleration due to gravity\n            accelD -= A_GRAVITY;\n\n            // Calculate acceleration due to drag\n            const vel = dp.totalSpeed;\n            const proj = (accelN * dp.vy + accelE * dp.vx + accelD * dp.velD) / vel;\n\n            const dragN = (proj * dp.vy) / vel;\n            const dragE = (proj * dp.vx) / vel;\n            const dragD = (proj * dp.velD) / vel;\n\n            const accelDrag = Math.sqrt(dragN * dragN + dragE * dragE + dragD * dragD);\n\n            // Calculate acceleration due to lift\n            const liftN = accelN - dragN;\n            const liftE = accelE - dragE;\n            const liftD = accelD - dragD;\n\n            const accelLift = Math.sqrt(liftN * liftN + liftE * liftE + liftD * liftD);\n\n            // From https://en.wikipedia.org/wiki/Atmospheric_pressure#Altitude_variation\n            const airPressure =\n                SL_PRESSURE *\n                Math.pow(1 - (LAPSE_RATE * dp.hMSL) / SL_TEMP, (A_GRAVITY * MM_AIR) / GAS_CONST / LAPSE_RATE);\n\n            // From https://en.wikipedia.org/wiki/Lapse_rate\n            const temperature = SL_TEMP - LAPSE_RATE * dp.hMSL;\n\n            // From https://en.wikipedia.org/wiki/Density_of_air\n            const airDensity = airPressure / (GAS_CONST / MM_AIR) / temperature;\n\n            // From https://en.wikipedia.org/wiki/Dynamic_pressure\n            const dynamicPressure = (airDensity * vel * vel) / 2;\n\n            // Calculate lift and drag coefficients\n            dp.lift = (this.options.mass * accelLift) / dynamicPressure / this.options.planformArea;\n            dp.drag = (this.options.mass * accelDrag) / dynamicPressure / this.options.planformArea;\n        });\n    }\n\n    updateVelocity(isInit: boolean = false) {\n        if (this.datapoints.length === 0) return;\n\n        const wind = this.getWind();\n\n        if (isInit) {\n            this.wind = wind;\n        }\n\n        if (this.options.windAdjustment) {\n            // Wind-adjusted position\n            for (let i = 0; i < this.datapoints.length; ++i) {\n                const dp0 = this.interpolateDataT(0);\n                const dp = this.datapoints[i];\n\n                const distance = Datapoint.getDistance(dp0, dp, this.options.windAdjustment);\n                const bearing = Datapoint.getBearing(dp0, dp, this.options.windAdjustment);\n\n                dp.x = distance * Math.sin(bearing) - wind.east * dp.t;\n                dp.y = distance * Math.cos(bearing) - wind.north * dp.t;\n            }\n\n            // Wind-adjusted velocity\n            for (let i = 0; i < this.datapoints.length; ++i) {\n                const dp = this.datapoints[i];\n\n                dp.vx = dp.velE - wind.east;\n                dp.vy = dp.velN - wind.north;\n            }\n        } else {\n            // Unadjusted position\n            for (let i = 0; i < this.datapoints.length; ++i) {\n                const dp0 = this.interpolateDataT(0);\n                const dp = this.datapoints[i];\n\n                const distance = Datapoint.getDistance(dp0, dp, this.options.windAdjustment);\n                const bearing = Datapoint.getBearing(dp0, dp, this.options.windAdjustment);\n\n                dp.x = distance * Math.sin(bearing);\n                dp.y = distance * Math.cos(bearing);\n            }\n\n            // Unadjusted velocity\n            for (let i = 0; i < this.datapoints.length; ++i) {\n                const dp = this.datapoints[i];\n\n                dp.vx = dp.velE;\n                dp.vy = dp.velN;\n            }\n        }\n\n        // Distance measurements\n        let dist2D = 0;\n        let dist3D = 0;\n\n        for (let i = 0; i < this.datapoints.length; ++i) {\n            const dp = this.datapoints[i];\n\n            if (i > 0) {\n                const dpPrev = this.datapoints[i - 1];\n\n                const dx = dp.x - dpPrev.x;\n                const dy = dp.y - dpPrev.y;\n                const dh = Math.sqrt(dx * dx + dy * dy);\n                const dz = dp.hMSL - dpPrev.hMSL;\n\n                dist2D += dh;\n                dist3D += Math.sqrt(dh * dh + dz * dz);\n            }\n\n            dp.dist2D = dist2D;\n            dp.dist3D = dist3D;\n        }\n\n        // Adjust for exit\n        const dp0 = this.interpolateDataT(0);\n\n        for (let i = 0; i < this.datapoints.length; ++i) {\n            const dp = this.datapoints[i];\n\n            dp.x -= dp0.x;\n            dp.y -= dp0.y;\n\n            dp.dist2D -= dp0.dist2D;\n            dp.dist3D -= dp0.dist3D;\n        }\n\n        let theta0: number;\n        if (this.course) {\n            theta0 = this.course;\n        } else {\n            theta0 = 0;\n        }\n\n        if (isInit) {\n            this.course = theta0;\n        }\n\n        // Cumulative heading\n        let prevHeading = 0;\n        let firstHeading = true;\n\n        for (let i = 0; i < this.datapoints.length; ++i) {\n            const dp = this.datapoints[i];\n\n            // Calculate heading\n            dp.heading = (Math.atan2(dp.vx, dp.vy) / Math.PI) * 180;\n\n            // Calculate heading accuracy\n            const s = dp.totalSpeed;\n            if (s != 0) dp.cAcc = dp.sAcc / s;\n            else dp.cAcc = 0;\n\n            // Adjust heading\n            if (!firstHeading) {\n                while (dp.heading < prevHeading - 180) dp.heading += 360;\n                while (dp.heading >= prevHeading + 180) dp.heading -= 360;\n            }\n\n            // Relative heading\n            dp.theta = dp.heading - theta0;\n\n            firstHeading = false;\n            prevHeading = dp.heading;\n        }\n\n        // Parameters depending on velocity\n        for (let i = 0; i < this.datapoints.length; ++i) {\n            const dp = this.datapoints[i];\n\n            dp.curv = this.getSlope(i, dp.diveAngle);\n            dp.accel = this.getSlope(i, dp.totalSpeed);\n            dp.omega = this.getSlope(i, dp.course);\n        }\n\n        // Initialize aerodynamics\n        this.initAerodynamics();\n    }\n\n    getSlope(center: number, value: number): number {\n        const min = Math.max(0, center - 4);\n        const max = Math.min(this.datapoints.length - 1, center + 4);\n\n        let sumX = 0;\n        let sumY = 0;\n        let sumXX = 0;\n        let sumXY = 0;\n\n        for (let i = min; i <= max; ++i) {\n            const datapoint = this.datapoints[i];\n            const y = value;\n\n            sumX += datapoint.t;\n            sumY += y;\n            sumXX += datapoint.t * datapoint.t;\n            sumXY += datapoint.t * y;\n        }\n\n        const n = max - min + 1;\n        return (sumXY - (sumX * sumY) / n) / (sumXX - (sumX * sumX) / n);\n    }\n\n    getWind(): Wind {\n        if (this.wind) {\n            return this.wind;\n        } else {\n            return {\n                east: this.options.windE,\n                north: this.options.windN,\n            };\n        }\n    }\n\n    getWindSpeedDirection(): WindSpeedDirection {\n        const wind = this.getWind();\n        const speed = Math.sqrt(wind.east * wind.east + wind.north * wind.north);\n        let direction = Math.atan2(-wind.east, -wind.north) / Math.PI;\n        if (direction < 0) direction += 360;\n\n        return {\n            speed,\n            direction,\n        };\n    }\n\n    interpolateDataT(t: number) {\n        const i1 = this.findIndexBelowT(t);\n        const i2 = this.findIndexAboveT(t);\n\n        if (i1 < 0) {\n            return this.datapoints[0];\n        } else if (i2 >= this.datapoints.length) {\n            return this.datapoints[this.datapoints.length - 1];\n        } else {\n            const dp1 = this.datapoints[i1];\n            const dp2 = this.datapoints[i2];\n            return Datapoint.interpolate(dp1, dp2, (t - dp1.t) / (dp2.t - dp1.t));\n        }\n    }\n\n    findIndexBelowT(t: number) {\n        let below = -1;\n        let above = this.datapoints.length;\n\n        while (below + 1 !== above) {\n            const mid = Math.floor((below + above) / 2);\n            const datapoint = this.datapoints[mid];\n\n            if (datapoint.t < t) below = mid;\n            else above = mid;\n        }\n\n        return below;\n    }\n\n    findIndexAboveT(t: number) {\n        let below = -1;\n        let above = this.datapoints.length;\n\n        while (below + 1 !== above) {\n            const mid = Math.ceil((below + above) / 2);\n            const datapoint = this.datapoints[mid];\n\n            if (datapoint.t > t) above = mid;\n            else below = mid;\n        }\n\n        return above;\n    }\n}\n","import { useEffect, useRef } from 'react';\nimport * as Sentry from '@sentry/react';\nimport { Map as OpenLayersMap, View as OpenLayersView, Feature as OpenLayersFeature, MapBrowserEvent } from 'ol';\nimport { fromLonLat } from 'ol/proj';\nimport { Tile as LayerTile, Vector as LayerVector } from 'ol/layer';\nimport { XYZ as SourceXYZ, Vector as SourceVector } from 'ol/source';\nimport { Style as StyleStyle, Stroke as StyleStroke, Circle as StyleCircle, Fill as StyleFill } from 'ol/style';\nimport { LineString as GeomLineString, Point as GeomPoint } from 'ol/geom';\n\nimport 'ol/ol.css';\nimport { Track } from './lib/Track';\nimport { Datapoint } from './lib/Datapoint';\nimport { useMountEffect, useRerender } from '@react-hookz/web';\n\nexport const Map: React.VFC<{\n    track: Track;\n    activeDatapointIndex: number | null;\n}> = Sentry.withProfiler(({ track, activeDatapointIndex }) => {\n    const rerender = useRerender();\n    const elRef = useRef<HTMLDivElement>(null);\n    const olRef = useRef<OpenLayersMap>();\n    const dotRef = useRef<LayerVector<SourceVector>>();\n\n    function moveMarkerToDatapoint(datapoint?: Datapoint) {\n        dotRef.current?.getSource()?.forEachFeature((feature) => {\n            const coords = datapoint ? fromLonLat([datapoint.lon, datapoint.lat]) : [0, 0];\n            (feature.getGeometry() as GeomPoint).setCoordinates(coords);\n        });\n    }\n\n    useEffect(() => {\n        if (!dotRef.current && olRef.current) {\n            console.log('Initializing marker');\n            dotRef.current = new LayerVector({\n                source: new SourceVector({\n                    features: [\n                        new OpenLayersFeature({\n                            geometry: new GeomPoint([0, 0]),\n                            name: 'Point',\n                        }),\n                    ],\n                }),\n            });\n\n            dotRef.current.setStyle(\n                new StyleStyle({\n                    image: new StyleCircle({\n                        fill: new StyleFill({ color: '#000000' }),\n                        stroke: new StyleStroke({ color: '#ff0000', width: 2 }),\n                        radius: 3,\n                    }),\n                })\n            );\n\n            olRef.current.addLayer(dotRef.current);\n        }\n\n        return () => {\n            dotRef.current?.dispose();\n            dotRef.current = undefined;\n        };\n    }, [olRef.current]);\n\n    useEffect(() => {\n        if (dotRef.current && olRef.current && activeDatapointIndex) {\n            const datapoint = track.datapoints[activeDatapointIndex];\n            moveMarkerToDatapoint(datapoint);\n        }\n    }, [activeDatapointIndex]);\n\n    useMountEffect(() => {\n        if (olRef.current || !elRef.current) return;\n        console.info('Initializing map');\n        const firstDatapoint = track.datapoints[0];\n        olRef.current = new OpenLayersMap({\n            target: elRef.current,\n            layers: [\n                new LayerTile({\n                    // source: new OSM(),\n                    source: new SourceXYZ({\n                        // https://gis.stackexchange.com/questions/367189/satellite-image-in-openlayers\n                        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n                        maxZoom: 19,\n                        attributions: 'ArcGIS',\n                    }),\n                }),\n            ],\n            view: new OpenLayersView({\n                center: fromLonLat([firstDatapoint.lon, firstDatapoint.lat]),\n                zoom: 14,\n            }),\n        });\n\n        var lineStyle = [\n            // linestring\n            new StyleStyle({\n                stroke: new StyleStroke({\n                    color: '#d12710',\n                    width: 2,\n                }),\n            }),\n        ];\n\n        var line = new LayerVector({\n            source: new SourceVector({\n                features: track.datapoints.map((datapoint, i) => {\n                    let nextDatapoint = track.datapoints[i + 1];\n                    if (!nextDatapoint) nextDatapoint = datapoint;\n\n                    var start = fromLonLat([datapoint.lon, datapoint.lat]);\n                    var end = fromLonLat([nextDatapoint.lon, nextDatapoint.lat]);\n\n                    const feature = new OpenLayersFeature({\n                        geometry: new GeomLineString([start, end]),\n                        name: 'Line',\n                    });\n\n                    feature.setId(i);\n\n                    return feature;\n                }),\n            }),\n        });\n\n        line.setStyle(lineStyle);\n        olRef.current.addLayer(line);\n        const extent = line.getSource()?.getExtent();\n        if (extent) {\n            olRef.current.getView().fit(extent, {\n                padding: [50, 50, 50, 50],\n            });\n        }\n\n        const moveMarker = (e: MapBrowserEvent<any>) => {\n            if (e.dragging) return;\n            olRef.current?.forEachFeatureAtPixel(\n                e.pixel,\n                (feature, layer) => {\n                    // Return true to stop scanning\n                    if (!layer) return true;\n\n                    const featureIndex = feature.getId();\n                    if (typeof featureIndex === 'number') {\n                        const datapoint = track.datapoints[featureIndex];\n\n                        moveMarkerToDatapoint(datapoint);\n                        return !!datapoint;\n                    }\n                },\n                {\n                    hitTolerance: 10,\n                    layerFilter: (layer) => layer === line,\n                }\n            );\n        };\n\n        olRef.current.on('pointermove', moveMarker);\n        olRef.current?.on('singleclick', moveMarker);\n\n        rerender();\n\n        return () => {\n            olRef.current?.dispose();\n            olRef.current = undefined;\n        };\n    });\n\n    return <div style={{ width: '100%', height: '100%' }} ref={elRef} />;\n});\n","export enum Unit {\n    Metric,\n    Imperial,\n}\n","import { useMemo, useRef } from 'react';\nimport {\n    CategoryScale,\n    Chart as ChartJS,\n    ChartData,\n    ChartOptions,\n    LinearScale,\n    LineController,\n    LineElement,\n    ParsedDataType,\n    Plugin,\n    PointElement,\n    Title,\n    Tooltip,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport zoomPlugin from 'chartjs-plugin-zoom';\n\nimport { Track } from './lib/Track';\nimport { Unit } from './lib/types';\n\nimport styles from './Chart2.module.css';\nimport { getDistanceDisplayUnit, getSpeedDisplayUnit } from './lib/utils';\n\nChartJS.register(zoomPlugin, LineController, LineElement, LinearScale, PointElement, Title, CategoryScale, Tooltip);\n\nChartJS.defaults.elements.line.borderWidth = 1;\n\nChartJS.defaults.elements.point.pointStyle = 'line';\nChartJS.defaults.elements.point.radius = 0;\nChartJS.defaults.elements.point.borderWidth = 0;\nChartJS.defaults.elements.point.hoverBorderWidth = 1;\nChartJS.defaults.elements.point.rotation = 90;\nChartJS.defaults.elements.point.hoverRadius = 1000;\nChartJS.defaults.elements.point.hoverBorderColor = '#000000';\nChartJS.defaults.elements.point.backgroundColor = 'rgba(0, 0, 0, 0)';\nChartJS.defaults.elements.point.borderColor = 'rgba(0, 0, 0, 0)';\n\nexport const Chart: React.VFC<{\n    track: Track;\n    unit: Unit;\n    setActiveDatapointIndex: (index: number | null) => void;\n}> = ({ track, unit, setActiveDatapointIndex }) => {\n    const eventRef = useRef({ lastX: -1 });\n\n    const elevationData = useMemo<ParsedDataType<'line'>[]>(\n        () => track.datapoints.map((d, i) => ({ x: i, y: d.elevation })),\n        [unit, track.datapoints]\n    );\n    const horizontalSpeedData = useMemo<ParsedDataType<'line'>[]>(\n        () => track.datapoints.map((d, i) => ({ x: i, y: d.horizontalSpeed })),\n        [unit, track.datapoints]\n    );\n    const verticalSpeedData = useMemo<ParsedDataType<'line'>[]>(\n        () => track.datapoints.map((d, i) => ({ x: i, y: d.verticalSpeed })),\n        [unit, track.datapoints]\n    );\n    const glideRatioData = useMemo<ParsedDataType<'line'>[]>(\n        () => track.datapoints.map((d, i) => ({ x: i, y: d.glideRatio })),\n        [track.datapoints]\n    );\n\n    const elevationMax = useMemo(() => Math.max(...elevationData.map((d) => d.y)), [elevationData]);\n    const speedMin = useMemo(\n        () =>\n            Math.floor(\n                Math.min(\n                    Math.min(...horizontalSpeedData.map((d) => d.y)),\n                    Math.min(...verticalSpeedData.map((d) => d.y))\n                )\n            ),\n        [horizontalSpeedData, verticalSpeedData]\n    );\n    const speedMax = useMemo(\n        () =>\n            Math.ceil(\n                Math.max(\n                    Math.max(...horizontalSpeedData.map((d) => d.y)),\n                    Math.max(...verticalSpeedData.map((d) => d.y))\n                )\n            ),\n        [horizontalSpeedData, verticalSpeedData]\n    );\n    const glideRatioMin = useMemo(() => Math.floor(Math.min(...glideRatioData.map((d) => d.y))), [glideRatioData]);\n    const glideRatioMax = useMemo(() => Math.ceil(Math.max(...glideRatioData.map((d) => d.y))), [glideRatioData]);\n\n    const data: ChartData<'line', ParsedDataType<'line'>[], number> = useMemo(\n        () => ({\n            labels: track.datapoints.map((d, i) => i),\n            datasets: [\n                {\n                    label: 'Elevation',\n                    data: elevationData,\n                    borderColor: '#000000',\n                    backgroundColor: '#000000',\n                    yAxisID: 'y',\n                },\n                {\n                    label: 'Horizontal Speed',\n                    data: horizontalSpeedData,\n                    borderColor: '#ff0000',\n                    backgroundColor: '#ff0000',\n                    yAxisID: 'y1',\n                },\n                {\n                    label: 'Vertical Speed',\n                    data: verticalSpeedData,\n                    borderColor: '#00ff00',\n                    backgroundColor: '#00ff00',\n                    yAxisID: 'y2',\n                },\n                {\n                    label: 'Glide Ratio',\n                    data: glideRatioData,\n                    borderColor: '#0000ff',\n                    backgroundColor: '#0000ff',\n                    yAxisID: 'y3',\n                },\n            ],\n        }),\n        [elevationData, horizontalSpeedData, verticalSpeedData, glideRatioData]\n    );\n\n    const options: ChartOptions<'line'> = useMemo(\n        () => ({\n            responsive: true,\n            maintainAspectRatio: false,\n            parsing: false,\n            normalized: true,\n            interaction: {\n                mode: 'index',\n                intersect: false,\n            },\n            animation: false,\n            // stacked: false,\n            plugins: {\n                decimation: {\n                    enabled: true,\n                    algorithm: 'min-max',\n                },\n                zoom: {\n                    limits: { x: { minRange: 10 } },\n                    pan: {\n                        enabled: true,\n                        mode: 'x',\n                    },\n                    zoom: {\n                        wheel: {\n                            enabled: true,\n                        },\n                        pinch: {\n                            enabled: true,\n                        },\n                        mode: 'x',\n                        drag: {\n                            enabled: true,\n                            modifierKey: 'shift',\n                        },\n                    },\n                },\n            },\n            scales: {\n                y: {\n                    type: 'linear',\n                    display: true,\n                    position: 'right',\n                    title: { display: true, text: 'Elevation', color: '#000000' },\n                    min: 0,\n                    max: elevationMax,\n                },\n                y1: {\n                    type: 'linear',\n                    display: true,\n                    position: 'left',\n                    title: { display: true, text: 'Horizontal Speed', color: '#ff0000' },\n                    min: speedMin,\n                    max: speedMax,\n\n                    // grid line settings\n                    grid: {\n                        drawOnChartArea: false, // only want the grid lines for one axis to show up\n                    },\n                },\n                y2: {\n                    type: 'linear',\n                    display: true,\n                    position: 'left',\n                    title: { display: true, text: 'Vertical Speed', color: '#00ff00' },\n                    min: speedMin,\n                    max: speedMax,\n\n                    // grid line settings\n                    grid: {\n                        drawOnChartArea: false, // only want the grid lines for one axis to show up\n                    },\n                },\n                y3: {\n                    type: 'linear',\n                    display: true,\n                    position: 'left',\n                    title: { display: true, text: 'Glide Ratio', color: '#0000ff' },\n                    min: glideRatioMin,\n                    max: glideRatioMax,\n\n                    // grid line settings\n                    grid: {\n                        drawOnChartArea: false, // only want the grid lines for one axis to show up\n                    },\n                },\n            },\n        }),\n        [elevationMax, speedMin, speedMax, glideRatioMin, glideRatioMax]\n    );\n\n    const plugins: Plugin<'line'>[] = useMemo(\n        () => [\n            {\n                id: 'myEventCatcher',\n                beforeEvent(chart, args, pluginOptions) {\n                    const event = args.event;\n                    if (event.type === 'mouseout') {\n                        setActiveDatapointIndex(null);\n                    }\n\n                    if (event.type === 'mousemove' && event.x) {\n                        const rect = chart.canvas.getBoundingClientRect();\n                        var x = event.x - rect.left;\n                        if (x > chart.chartArea.right) x = chart.chartArea.right;\n                        const dataX = chart.scales['x'].getValueForPixel(x);\n                        setActiveDatapointIndex(dataX ?? null);\n                    }\n                },\n            },\n        ],\n        []\n    );\n\n    return (\n        <div className={styles.Chart}>\n            <Line height={300} data={data} options={options} plugins={plugins} />\n        </div>\n    );\n};\n","export default \"time,lat,lon,hMSL,velN,velE,velD,hAcc,vAcc,sAcc,gpsFix,numSV\\n,(deg),(deg),(m),(m/s),(m/s),(m/s),(m),(m),(m/s),,,\\n2010-09-11T21:23:08.00Z,53.6322164,-114.1941555,4443.290,-1.38,-33.82,9.96,14.015,17.902,0.90,3,4\\n2010-09-11T21:23:08.20Z,53.6322474,-114.1942516,4440.997,2.42,-32.79,10.55,8.128,10.257,0.89,3,8\\n2010-09-11T21:23:08.40Z,53.6322553,-114.1943456,4437.749,2.70,-32.34,10.94,5.950,8.382,0.73,3,8\\n2010-09-11T21:23:08.60Z,53.6322564,-114.1944440,4435.125,3.01,-31.73,11.49,4.827,7.111,0.69,3,9\\n2010-09-11T21:23:08.80Z,53.6322638,-114.1945308,4431.909,3.05,-31.39,12.01,4.106,6.185,0.67,3,9\\n2010-09-11T21:23:09.00Z,53.6322682,-114.1946206,4428.994,2.94,-31.18,12.36,3.625,5.487,0.66,3,9\\n2010-09-11T21:23:09.20Z,53.6322751,-114.1947084,4425.398,3.12,-30.89,12.67,3.241,4.902,0.70,3,9\\n2010-09-11T21:23:09.40Z,53.6322824,-114.1947940,4421.885,2.95,-29.46,13.47,2.967,4.470,0.72,3,9\\n2010-09-11T21:23:09.60Z,53.6322877,-114.1948735,4417.783,3.09,-28.71,14.34,2.710,4.052,0.74,3,9\\n2010-09-11T21:23:09.80Z,53.6322976,-114.1949537,4413.787,3.33,-28.35,15.09,2.514,3.715,0.78,3,9\\n2010-09-11T21:23:10.00Z,53.6323045,-114.1950327,4409.401,3.84,-27.96,15.85,2.335,3.419,0.78,3,9\\n2010-09-11T21:23:10.20Z,53.6323111,-114.1951096,4405.010,4.23,-27.63,16.54,2.190,3.186,0.76,3,9\\n2010-09-11T21:23:10.40Z,53.6323162,-114.1951889,4400.851,4.66,-27.10,17.04,2.079,3.018,0.80,3,8\\n2010-09-11T21:23:10.60Z,53.6323235,-114.1952677,4396.465,4.98,-26.77,17.50,1.995,2.892,0.82,3,8\\n2010-09-11T21:23:10.80Z,53.6323315,-114.1953460,4392.543,5.12,-26.67,17.87,1.936,2.801,0.83,3,8\\n2010-09-11T21:23:11.00Z,53.6323411,-114.1954241,4388.500,5.02,-26.48,18.20,1.890,2.728,0.84,3,8\\n2010-09-11T21:23:11.20Z,53.6323482,-114.1955028,4383.792,4.83,-26.67,18.55,1.860,2.669,0.93,3,8\\n2010-09-11T21:23:11.40Z,53.6323560,-114.1955826,4379.480,4.77,-26.74,18.93,1.834,2.616,0.94,3,8\\n2010-09-11T21:23:11.60Z,53.6323633,-114.1956622,4374.912,4.63,-26.54,19.33,1.811,2.568,0.94,3,8\\n2010-09-11T21:23:11.80Z,53.6323702,-114.1957418,4370.094,4.38,-26.54,19.73,1.791,2.528,0.96,3,8\\n2010-09-11T21:23:12.00Z,53.6323775,-114.1958202,4365.509,4.21,-26.42,20.08,1.766,2.490,0.91,3,8\\n2010-09-11T21:23:12.20Z,53.6323841,-114.1958997,4360.786,4.08,-26.52,20.42,1.748,2.459,0.99,3,8\\n2010-09-11T21:23:12.40Z,53.6323906,-114.1959793,4356.108,3.89,-26.54,20.77,1.735,2.432,1.02,3,8\\n2010-09-11T21:23:12.60Z,53.6323970,-114.1960580,4351.289,3.78,-26.36,21.12,1.724,2.409,1.05,3,8\\n2010-09-11T21:23:12.80Z,53.6324034,-114.1961363,4346.359,3.70,-26.11,21.47,1.716,2.389,1.06,3,8\\n2010-09-11T21:23:13.00Z,53.6324102,-114.1962137,4341.334,3.69,-26.12,21.82,1.709,2.371,1.07,3,8\\n2010-09-11T21:23:13.20Z,53.6324168,-114.1962911,4336.184,3.82,-26.10,22.12,1.698,2.354,1.05,3,8\\n2010-09-11T21:23:13.40Z,53.6324232,-114.1963693,4331.055,3.71,-26.24,22.35,1.682,2.335,1.03,3,8\\n2010-09-11T21:23:13.60Z,53.6324297,-114.1964445,4325.920,3.71,-25.42,22.78,1.670,2.324,0.97,3,7\\n2010-09-11T21:23:13.80Z,53.6324360,-114.1965197,4320.747,3.72,-25.20,23.09,1.660,2.316,0.91,3,7\\n2010-09-11T21:23:14.00Z,53.6324424,-114.1965942,4315.638,3.66,-25.13,23.31,1.651,2.311,0.86,3,7\\n2010-09-11T21:23:14.20Z,53.6324491,-114.1966682,4310.657,3.62,-25.17,23.49,1.643,2.305,0.81,3,7\\n2010-09-11T21:23:14.40Z,53.6324561,-114.1967429,4305.611,3.67,-25.17,23.64,1.636,2.300,0.76,3,7\\n2010-09-11T21:23:14.60Z,53.6324635,-114.1968175,4300.522,3.85,-25.16,23.79,1.627,2.291,0.71,3,7\\n2010-09-11T21:23:14.80Z,53.6324709,-114.1968917,4295.255,4.03,-25.16,23.97,1.617,2.280,0.66,3,7\\n2010-09-11T21:23:15.00Z,53.6324786,-114.1969659,4290.033,4.22,-25.17,24.08,1.608,2.271,0.65,3,7\\n2010-09-11T21:23:15.20Z,53.6324866,-114.1970391,4284.633,4.39,-25.15,24.23,1.587,2.246,0.64,3,8\\n2010-09-11T21:23:15.40Z,53.6324950,-114.1971121,4279.245,4.58,-25.08,24.36,1.565,2.220,0.63,3,8\\n2010-09-11T21:23:15.60Z,53.6325037,-114.1971858,4273.833,4.74,-24.84,24.55,1.552,2.195,0.72,3,8\\n2010-09-11T21:23:15.80Z,53.6325127,-114.1972596,4268.389,4.68,-24.79,24.63,1.532,2.154,0.71,3,8\\n2010-09-11T21:23:16.00Z,53.6325213,-114.1973335,4262.991,4.55,-24.84,24.71,1.516,2.121,0.71,3,8\\n2010-09-11T21:23:16.20Z,53.6325296,-114.1974073,4257.673,4.39,-24.82,24.77,1.506,2.096,0.71,3,8\\n2010-09-11T21:23:16.40Z,53.6325372,-114.1974816,4252.409,4.15,-24.79,24.83,1.510,2.082,0.75,3,8\\n2010-09-11T21:23:16.60Z,53.6325444,-114.1975559,4247.218,3.93,-24.77,24.83,1.520,2.071,0.76,3,8\\n2010-09-11T21:23:16.80Z,53.6325512,-114.1976302,4242.038,3.70,-24.73,24.83,1.527,2.060,0.75,3,8\\n2010-09-11T21:23:17.00Z,53.6325574,-114.1977041,4236.873,3.44,-24.63,24.83,1.535,2.052,0.75,3,8\\n2010-09-11T21:23:17.20Z,53.6325634,-114.1977781,4231.804,3.34,-24.64,24.78,1.547,2.051,0.78,3,8\\n2010-09-11T21:23:17.40Z,53.6325687,-114.1978521,4226.690,2.93,-24.65,24.80,1.560,2.050,0.78,3,8\\n2010-09-11T21:23:17.60Z,53.6325737,-114.1979263,4221.563,2.80,-24.71,24.83,1.575,2.053,0.78,3,8\\n2010-09-11T21:23:17.80Z,53.6325783,-114.1980000,4216.485,2.55,-24.66,24.82,1.590,2.056,0.78,3,8\\n2010-09-11T21:23:18.00Z,53.6325816,-114.1980740,4211.426,1.77,-24.45,24.77,1.613,2.062,0.80,3,8\\n2010-09-11T21:23:18.20Z,53.6325847,-114.1981474,4206.420,1.85,-24.62,24.78,1.630,2.078,0.78,3,8\\n2010-09-11T21:23:18.40Z,53.6325876,-114.1982212,4201.393,1.68,-24.72,24.79,1.639,2.099,0.75,3,8\\n2010-09-11T21:23:18.60Z,53.6325896,-114.1982948,4196.327,1.26,-24.74,24.86,1.642,2.117,0.73,3,8\\n2010-09-11T21:23:18.80Z,53.6325912,-114.1983688,4191.204,1.05,-24.77,24.97,1.644,2.138,0.73,3,8\\n2010-09-11T21:23:19.00Z,53.6325926,-114.1984428,4185.966,0.87,-24.85,25.14,1.635,2.156,0.71,3,8\\n2010-09-11T21:23:19.20Z,53.6325937,-114.1985175,4180.694,0.78,-25.00,25.31,1.628,2.173,0.71,3,8\\n2010-09-11T21:23:19.40Z,53.6325945,-114.1985927,4175.303,0.55,-25.10,25.53,1.620,2.192,0.70,3,8\\n2010-09-11T21:23:19.60Z,53.6325946,-114.1986683,4169.832,0.22,-25.23,25.80,1.612,2.210,0.70,3,8\\n2010-09-11T21:23:19.80Z,53.6325939,-114.1987445,4164.331,0.29,-25.38,26.02,1.605,2.228,0.70,3,8\\n2010-09-11T21:23:20.00Z,53.6325933,-114.1988216,4158.718,0.35,-25.49,26.26,1.602,2.245,0.71,3,8\\n2010-09-11T21:23:20.20Z,53.6325927,-114.1988990,4153.017,0.35,-25.66,26.50,1.597,2.260,0.70,3,8\\n2010-09-11T21:23:20.40Z,53.6325923,-114.1989772,4147.229,0.31,-25.85,26.73,1.594,2.274,0.69,3,8\\n2010-09-11T21:23:20.60Z,53.6325913,-114.1990551,4141.436,0.45,-25.91,26.98,1.591,2.289,0.69,3,8\\n2010-09-11T21:23:20.80Z,53.6325901,-114.1991332,4135.543,0.60,-25.99,27.23,1.589,2.304,0.69,3,8\\n2010-09-11T21:23:21.00Z,53.6325886,-114.1992116,4129.672,0.75,-26.16,27.50,1.588,2.330,0.71,3,8\\n2010-09-11T21:23:21.20Z,53.6325866,-114.1992916,4123.514,-1.03,-26.46,27.90,1.579,2.315,0.69,3,9\\n2010-09-11T21:23:21.40Z,53.6325851,-114.1993724,4117.330,-1.02,-26.69,28.28,1.570,2.307,0.68,3,9\\n2010-09-11T21:23:21.60Z,53.6325837,-114.1994537,4111.170,0.98,-26.81,28.59,1.563,2.301,0.68,3,9\\n2010-09-11T21:23:21.80Z,53.6325823,-114.1995355,4104.991,-1.12,-26.98,28.89,1.556,2.298,0.66,3,9\\n2010-09-11T21:23:22.00Z,53.6325805,-114.1996179,4098.826,-1.27,-27.26,29.15,1.551,2.297,0.66,3,9\\n2010-09-11T21:23:22.20Z,53.6325784,-114.1997012,4092.601,-1.51,-27.46,29.43,1.547,2.297,0.67,3,9\\n2010-09-11T21:23:22.40Z,53.6325762,-114.1997849,4086.351,-1.60,-27.58,29.69,1.546,2.300,0.67,3,9\\n2010-09-11T21:23:22.60Z,53.6325738,-114.1998695,4080.062,-1.74,-27.87,29.95,1.545,2.303,0.67,3,9\\n2010-09-11T21:23:22.80Z,53.6325712,-114.1999547,4073.747,-1.98,-28.15,30.18,1.544,2.306,0.66,3,9\\n2010-09-11T21:23:23.00Z,53.6325678,-114.2000406,4067.353,-2.36,-28.38,30.42,1.543,2.311,0.65,3,9\\n2010-09-11T21:23:23.20Z,53.6325638,-114.2001271,4060.992,-2.62,-28.65,30.61,1.543,2.315,0.66,3,9\\n2010-09-11T21:23:23.40Z,53.6325598,-114.2002146,4054.492,-2.71,-28.94,30.85,1.543,2.317,0.66,3,9\\n2010-09-11T21:23:23.60Z,53.6325558,-114.2003029,4047.969,-2.73,-29.22,31.06,1.542,2.320,0.65,3,9\\n2010-09-11T21:23:23.80Z,53.6325516,-114.2003917,4041.488,-2.71,-29.45,31.22,1.545,2.329,0.66,3,9\\n2010-09-11T21:23:24.00Z,53.6325484,-114.2004806,4034.633,-2.58,-29.46,31.63,1.520,2.275,0.63,3,9\\n2010-09-11T21:23:24.20Z,53.6325452,-114.2005700,4027.841,-2.62,-29.57,31.82,1.486,2.204,0.62,3,9\\n2010-09-11T21:23:24.40Z,53.6325421,-114.2006600,4021.145,-2.28,-29.81,31.92,1.453,2.137,0.60,3,9\\n2010-09-11T21:23:24.60Z,53.6325392,-114.2007499,4014.569,-1.90,-29.85,31.97,1.429,2.087,0.62,3,9\\n2010-09-11T21:23:24.80Z,53.6325371,-114.2008403,4007.994,-1.46,-29.98,32.00,1.412,2.043,0.63,3,9\\n2010-09-11T21:23:25.00Z,53.6325355,-114.2009314,4001.445,-1.13,-30.21,32.05,1.399,2.003,0.63,3,9\\n2010-09-11T21:23:25.20Z,53.6325343,-114.2010229,3994.959,0.94,-30.40,32.04,1.384,1.968,0.63,3,9\\n2010-09-11T21:23:25.40Z,53.6325332,-114.2011147,3988.493,0.81,-30.46,32.01,1.377,1.947,0.63,3,9\\n2010-09-11T21:23:25.60Z,53.6325326,-114.2012072,3982.020,0.41,-30.66,32.07,1.376,1.939,0.64,3,9\\n2010-09-11T21:23:25.80Z,53.6325322,-114.2013004,3975.592,0.28,-30.85,32.06,1.380,1.941,0.65,3,9\\n2010-09-11T21:23:26.00Z,53.6325318,-114.2013939,3969.181,0.37,-31.01,32.06,1.387,1.949,0.66,3,9\\n2010-09-11T21:23:26.20Z,53.6325313,-114.2014883,3962.759,0.43,-31.32,32.06,1.396,1.960,0.66,3,9\\n2010-09-11T21:23:26.40Z,53.6325307,-114.2015834,3956.380,0.41,-31.60,31.99,1.405,1.972,0.66,3,9\\n2010-09-11T21:23:26.60Z,53.6325300,-114.2016795,3950.032,0.49,-31.82,31.89,1.413,1.984,0.67,3,9\\n2010-09-11T21:23:26.80Z,53.6325293,-114.2017760,3943.720,0.45,-32.00,31.80,1.423,1.999,0.68,3,9\\n2010-09-11T21:23:27.00Z,53.6325287,-114.2018732,3937.405,0.35,-32.24,31.74,1.432,2.013,0.68,3,9\\n2010-09-11T21:23:27.20Z,53.6325282,-114.2019711,3931.123,0.29,-32.47,31.65,1.441,2.028,0.68,3,9\\n2010-09-11T21:23:27.40Z,53.6325281,-114.2020696,3924.819,0.11,-32.60,31.61,1.450,2.044,0.68,3,9\\n2010-09-11T21:23:27.60Z,53.6325283,-114.2021684,3918.499,0.10,-32.72,31.59,1.457,2.059,0.67,3,9\\n2010-09-11T21:23:27.80Z,53.6325291,-114.2022674,3912.089,0.33,-32.76,31.63,1.461,2.072,0.66,3,9\\n2010-09-11T21:23:28.00Z,53.6325305,-114.2023666,3905.685,0.68,-32.85,31.67,1.465,2.084,0.67,3,9\\n2010-09-11T21:23:28.20Z,53.6325325,-114.2024659,3899.246,1.01,-32.89,31.74,1.469,2.093,0.66,3,9\\n2010-09-11T21:23:28.40Z,53.6325353,-114.2025651,3892.727,1.40,-32.86,31.84,1.474,2.099,0.67,3,9\\n2010-09-11T21:23:28.60Z,53.6325390,-114.2026647,3886.199,1.89,-32.88,31.94,1.480,2.106,0.68,3,9\\n2010-09-11T21:23:28.80Z,53.6325435,-114.2027649,3879.654,2.10,-32.95,31.99,1.482,2.111,0.67,3,9\\n2010-09-11T21:23:29.00Z,53.6325481,-114.2028658,3873.103,2.34,-33.21,32.07,1.483,2.117,0.66,3,9\\n2010-09-11T21:23:29.20Z,53.6325534,-114.2029669,3866.528,2.61,-33.25,32.14,1.483,2.121,0.66,3,9\\n2010-09-11T21:23:29.40Z,53.6325587,-114.2030683,3860.009,2.77,-33.41,32.17,1.484,2.130,0.66,3,9\\n2010-09-11T21:23:29.60Z,53.6325642,-114.2031703,3853.455,2.85,-33.56,32.22,1.489,2.145,0.65,3,9\\n2010-09-11T21:23:29.80Z,53.6325698,-114.2032732,3846.918,2.88,-33.80,32.22,1.493,2.160,0.65,3,9\\n2010-09-11T21:23:30.00Z,53.6325754,-114.2033763,3840.290,2.74,-33.86,32.29,1.497,2.175,0.65,3,9\\n2010-09-11T21:23:30.20Z,53.6325807,-114.2034793,3833.682,2.75,-33.91,32.36,1.501,2.189,0.65,3,9\\n2010-09-11T21:23:30.40Z,53.6325861,-114.2035822,3827.080,2.80,-33.89,32.43,1.506,2.204,0.66,3,9\\n2010-09-11T21:23:30.60Z,53.6325917,-114.2036855,3820.424,2.87,-34.00,32.52,1.512,2.218,0.66,3,9\\n2010-09-11T21:23:30.80Z,53.6325975,-114.2037887,3813.704,3.01,-33.97,32.66,1.517,2.231,0.65,3,9\\n2010-09-11T21:23:31.00Z,53.6326034,-114.2038920,3806.988,3.06,-34.07,32.78,1.521,2.243,0.65,3,9\\n2010-09-11T21:23:31.20Z,53.6326100,-114.2039954,3800.168,3.34,-34.05,32.95,1.521,2.247,0.64,3,9\\n2010-09-11T21:23:31.40Z,53.6326169,-114.2040991,3793.366,3.55,-34.18,33.06,1.520,2.249,0.63,3,9\\n2010-09-11T21:23:31.60Z,53.6326244,-114.2042027,3786.478,3.91,-34.11,33.24,1.519,2.252,0.63,3,9\\n2010-09-11T21:23:31.80Z,53.6326327,-114.2043058,3779.617,4.53,-33.99,33.39,1.524,2.263,0.65,3,9\\n2010-09-11T21:23:32.00Z,53.6326427,-114.2044083,3772.717,5.35,-33.76,33.50,1.525,2.267,0.65,3,9\\n2010-09-11T21:23:32.20Z,53.6326544,-114.2045099,3765.721,6.20,-33.33,33.65,1.521,2.259,0.66,3,9\\n2010-09-11T21:23:32.40Z,53.6326679,-114.2046099,3758.778,7.23,-32.90,33.74,1.519,2.250,0.65,3,9\\n2010-09-11T21:23:32.60Z,53.6326834,-114.2047081,3751.825,8.38,-32.28,33.91,1.514,2.221,0.63,3,9\\n2010-09-11T21:23:32.80Z,53.6327015,-114.2048040,3744.841,9.78,-31.47,34.07,1.512,2.193,0.61,3,9\\n2010-09-11T21:23:33.00Z,53.6327222,-114.2048970,3737.812,11.12,-30.45,34.28,1.515,2.172,0.60,3,9\\n2010-09-11T21:23:33.20Z,53.6327452,-114.2049863,3730.705,12.38,-29.16,34.49,1.528,2.166,0.63,3,9\\n2010-09-11T21:23:33.40Z,53.6327704,-114.2050718,3723.559,13.55,-27.88,34.71,1.549,2.168,0.64,3,9\\n2010-09-11T21:23:33.60Z,53.6327987,-114.2051525,3716.248,15.10,-26.32,35.03,1.573,2.173,0.66,3,9\\n2010-09-11T21:23:33.80Z,53.6328288,-114.2052291,3708.912,16.14,-25.00,35.31,1.593,2.178,0.65,3,9\\n2010-09-11T21:23:34.00Z,53.6328613,-114.2053011,3701.402,17.43,-23.55,35.67,1.613,2.186,0.66,3,9\\n2010-09-11T21:23:34.20Z,53.6328968,-114.2053674,3693.822,19.02,-21.57,36.09,1.618,2.188,0.63,3,9\\n2010-09-11T21:23:34.40Z,53.6329345,-114.2054286,3685.717,20.47,-20.23,36.73,1.601,2.158,0.58,3,9\\n2010-09-11T21:23:34.60Z,53.6329737,-114.2054857,3677.862,21.64,-18.62,37.02,1.580,2.138,0.60,3,9\\n2010-09-11T21:23:34.80Z,53.6330143,-114.2055383,3670.100,22.51,-17.06,37.20,1.565,2.135,0.61,3,9\\n2010-09-11T21:23:35.00Z,53.6330568,-114.2055878,3662.185,23.55,-16.00,37.43,1.546,2.109,0.58,3,9\\n2010-09-11T21:23:35.20Z,53.6331007,-114.2056337,3654.429,24.43,-14.68,37.61,1.533,2.100,0.61,3,9\\n2010-09-11T21:23:35.40Z,53.6331462,-114.2056760,3646.659,25.35,-13.56,37.73,1.525,2.097,0.62,3,9\\n2010-09-11T21:23:35.60Z,53.6331930,-114.2057157,3638.896,26.00,-12.79,37.84,1.519,2.099,0.63,3,9\\n2010-09-11T21:23:35.80Z,53.6332412,-114.2057532,3631.127,26.78,-12.25,37.95,1.516,2.104,0.64,3,9\\n2010-09-11T21:23:36.00Z,53.6332909,-114.2057889,3623.321,27.45,-11.74,38.02,1.513,2.106,0.64,3,9\\n2010-09-11T21:23:36.20Z,53.6333417,-114.2058223,3615.605,28.04,-10.96,37.99,1.511,2.109,0.65,3,9\\n2010-09-11T21:23:36.40Z,53.6333939,-114.2058530,3607.892,28.79,-10.09,37.98,1.509,2.113,0.66,3,9\\n2010-09-11T21:23:36.60Z,53.6334474,-114.2058809,3600.222,29.50,-9.15,37.92,1.506,2.114,0.66,3,9\\n2010-09-11T21:23:36.80Z,53.6335022,-114.2059065,3592.540,30.27,-8.42,37.91,1.504,2.115,0.67,3,9\\n2010-09-11T21:23:37.00Z,53.6335583,-114.2059297,3584.929,30.96,-7.64,37.81,1.499,2.110,0.67,3,9\\n2010-09-11T21:23:37.20Z,53.6336151,-114.2059508,3577.300,31.47,-6.89,37.76,1.494,2.105,0.67,3,9\\n2010-09-11T21:23:37.40Z,53.6336731,-114.2059701,3569.649,32.08,-6.38,37.74,1.489,2.101,0.67,3,9\\n2010-09-11T21:23:37.60Z,53.6337316,-114.2059883,3562.060,32.49,-5.91,37.69,1.486,2.097,0.68,3,9\\n2010-09-11T21:23:37.80Z,53.6337911,-114.2060055,3554.447,32.97,-5.60,37.67,1.486,2.093,0.70,3,9\\n2010-09-11T21:23:38.00Z,53.6338512,-114.2060214,3546.866,33.37,-5.18,37.61,1.487,2.089,0.70,3,9\\n2010-09-11T21:23:38.20Z,53.6339125,-114.2060362,3539.364,33.98,-4.78,37.52,1.488,2.086,0.71,3,9\\n2010-09-11T21:23:38.40Z,53.6339742,-114.2060501,3531.896,34.27,-4.53,37.41,1.490,2.083,0.71,3,9\\n2010-09-11T21:23:38.60Z,53.6340366,-114.2060634,3524.404,34.72,-4.36,37.33,1.492,2.081,0.71,3,9\\n2010-09-11T21:23:38.80Z,53.6340993,-114.2060769,3516.929,34.91,-4.42,37.28,1.500,2.082,0.72,3,9\\n2010-09-11T21:23:39.00Z,53.6341623,-114.2060908,3509.413,35.04,-4.60,37.25,1.509,2.084,0.71,3,9\\n2010-09-11T21:23:39.20Z,53.6342254,-114.2061057,3501.934,35.13,-4.91,37.21,1.524,2.089,0.72,3,9\\n2010-09-11T21:23:39.40Z,53.6342887,-114.2061214,3494.533,35.22,-5.25,37.12,1.543,2.099,0.74,3,9\\n2010-09-11T21:23:39.60Z,53.6343522,-114.2061386,3487.166,35.36,-5.81,37.01,1.561,2.112,0.74,3,9\\n2010-09-11T21:23:39.80Z,53.6344162,-114.2061562,3479.868,35.57,-5.88,36.88,1.570,2.124,0.72,3,9\\n2010-09-11T21:23:40.00Z,53.6344805,-114.2061740,3472.621,35.67,-5.96,36.73,1.573,2.128,0.70,3,9\\n2010-09-11T21:23:40.20Z,53.6345449,-114.2061921,3465.389,35.79,-5.98,36.61,1.588,2.138,0.74,3,9\\n2010-09-11T21:23:40.40Z,53.6346097,-114.2062100,3458.218,35.97,-5.99,36.44,1.602,2.144,0.74,3,9\\n2010-09-11T21:23:40.60Z,53.6346752,-114.2062270,3451.128,36.25,-5.71,36.23,1.612,2.147,0.74,3,9\\n2010-09-11T21:23:40.80Z,53.6347410,-114.2062424,3444.142,36.39,-5.10,35.95,1.618,2.140,0.73,3,9\\n2010-09-11T21:23:41.20Z,53.6348740,-114.2062687,3430.029,36.92,-4.06,35.59,1.607,2.102,0.69,3,9\\n2010-09-11T21:23:41.40Z,53.6349411,-114.2062790,3423.036,37.11,-3.36,35.40,1.597,2.079,0.69,3,9\\n2010-09-11T21:23:41.60Z,53.6350085,-114.2062875,3416.025,37.29,-2.77,35.24,1.589,2.058,0.69,3,9\\n2010-09-11T21:23:41.80Z,53.6350758,-114.2062939,3409.013,37.36,-2.04,35.11,1.581,2.037,0.69,3,9\\n2010-09-11T21:23:42.00Z,53.6351438,-114.2062983,3402.090,37.61,-1.44,34.93,1.568,2.012,0.67,3,9\\n2010-09-11T21:23:42.20Z,53.6352123,-114.2063012,3395.275,37.79,0.93,34.73,1.559,1.996,0.67,3,9\\n2010-09-11T21:23:42.40Z,53.6352812,-114.2063033,3388.500,38.07,0.77,34.55,1.552,1.982,0.67,3,9\\n2010-09-11T21:23:42.60Z,53.6353501,-114.2063044,3381.783,38.04,0.46,34.32,1.550,1.970,0.67,3,9\\n2010-09-11T21:23:42.80Z,53.6354190,-114.2063055,3375.085,38.04,0.33,34.15,1.560,1.971,0.68,3,9\\n2010-09-11T21:23:43.00Z,53.6354875,-114.2063075,3368.354,37.98,0.62,34.04,1.570,1.975,0.66,3,9\\n2010-09-11T21:23:43.20Z,53.6355559,-114.2063100,3361.722,37.90,0.86,33.86,1.582,1.979,0.66,3,9\\n2010-09-11T21:23:43.40Z,53.6356245,-114.2063118,3355.189,37.87,0.96,33.54,1.586,1.978,0.65,3,9\\n2010-09-11T21:23:43.60Z,53.6356934,-114.2063114,3348.745,37.79,0.36,33.19,1.590,1.975,0.65,3,9\\n2010-09-11T21:23:43.80Z,53.6357614,-114.2063096,3342.375,37.66,0.39,32.88,1.595,1.976,0.66,3,9\\n2010-09-11T21:23:44.00Z,53.6358301,-114.2063055,3336.022,37.65,1.16,32.62,1.587,1.971,0.62,3,9\\n2010-09-11T21:23:44.20Z,53.6358982,-114.2062989,3329.735,37.51,2.07,32.36,1.580,1.970,0.62,3,9\\n2010-09-11T21:23:44.40Z,53.6359662,-114.2062870,3323.572,37.34,3.67,32.01,1.567,1.957,0.63,3,9\\n2010-09-11T21:23:44.60Z,53.6360331,-114.2062711,3317.361,36.84,5.31,31.81,1.544,1.945,0.62,3,9\\n2010-09-11T21:23:44.80Z,53.6360986,-114.2062506,3311.008,36.02,7.13,31.81,1.517,1.928,0.58,3,9\\n2010-09-11T21:23:45.00Z,53.6361623,-114.2062249,3304.568,35.09,8.85,31.92,1.501,1.928,0.61,3,9\\n2010-09-11T21:23:45.20Z,53.6362237,-114.2061941,3297.985,33.97,10.45,32.12,1.493,1.932,0.64,3,9\\n2010-09-11T21:23:45.40Z,53.6362825,-114.2061584,3291.284,32.84,12.20,32.44,1.488,1.936,0.64,3,9\\n2010-09-11T21:23:45.60Z,53.6363390,-114.2061176,3284.435,31.53,13.85,32.80,1.484,1.940,0.64,3,9\\n2010-09-11T21:23:45.80Z,53.6363931,-114.2060722,3277.457,30.23,15.35,33.21,1.481,1.945,0.63,3,9\\n2010-09-11T21:23:46.00Z,53.6364454,-114.2060217,3270.258,29.17,16.88,33.67,1.477,1.944,0.59,3,9\\n2010-09-11T21:23:46.20Z,53.6364964,-114.2059659,3263.095,28.58,18.59,34.10,1.478,1.939,0.58,3,9\\n2010-09-11T21:23:46.40Z,53.6365461,-114.2059068,3255.920,27.76,19.77,34.37,1.483,1.942,0.59,3,11\\n2010-09-11T21:23:46.60Z,53.6365949,-114.2058437,3248.759,27.25,21.13,34.57,1.489,1.945,0.58,3,11\\n2010-09-11T21:23:46.80Z,53.6366421,-114.2057771,3241.552,26.44,22.33,34.77,1.499,1.950,0.57,3,11\\n2010-09-11T21:23:47.00Z,53.6366881,-114.2057057,3234.132,25.58,23.80,35.05,1.496,1.937,0.53,3,11\\n2010-09-11T21:23:47.20Z,53.6367328,-114.2056307,3226.656,24.83,25.02,35.33,1.476,1.914,0.50,3,11\\n2010-09-11T21:23:47.40Z,53.6367765,-114.2055530,3219.299,24.33,25.98,35.68,1.455,1.896,0.50,3,11\\n2010-09-11T21:23:47.60Z,53.6368196,-114.2054721,3211.915,23.84,27.04,35.97,1.435,1.880,0.50,3,11\\n2010-09-11T21:23:47.80Z,53.6368615,-114.2053882,3204.529,23.19,28.11,36.14,1.420,1.872,0.50,3,11\\n2010-09-11T21:23:48.00Z,53.6369015,-114.2053007,3197.072,22.04,29.31,36.18,1.408,1.863,0.50,3,11\\n2010-09-11T21:23:48.20Z,53.6369391,-114.2052091,3189.499,20.63,30.80,36.35,1.395,1.856,0.54,3,11\\n2010-09-11T21:23:48.40Z,53.6369765,-114.2051142,3182.221,20.49,31.66,36.25,1.383,1.856,0.54,3,11\\n2010-09-11T21:23:48.60Z,53.6370133,-114.2050173,3174.969,20.12,32.31,36.11,1.372,1.857,0.56,3,11\\n2010-09-11T21:23:48.80Z,53.6370491,-114.2049182,3167.806,19.74,33.01,35.93,1.362,1.857,0.57,3,11\\n2010-09-11T21:23:49.00Z,53.6370838,-114.2048164,3160.780,18.95,33.90,35.74,1.357,1.860,0.59,3,11\\n2010-09-11T21:23:49.20Z,53.6371164,-114.2047121,3153.871,18.02,34.65,35.36,1.350,1.858,0.59,3,11\\n2010-09-11T21:23:49.40Z,53.6371484,-114.2046059,3147.025,17.75,35.22,35.05,1.341,1.854,0.58,3,11\\n2010-09-11T21:23:49.60Z,53.6371799,-114.2044985,3140.159,17.42,35.62,34.85,1.341,1.862,0.56,3,11\\n2010-09-11T21:23:49.80Z,53.6372107,-114.2043897,3133.405,17.14,35.91,34.55,1.341,1.869,0.56,3,11\\n2010-09-11T21:23:50.00Z,53.6372411,-114.2042797,3126.702,16.88,36.39,34.32,1.344,1.889,0.58,3,11\\n2010-09-11T21:23:50.20Z,53.6372707,-114.2041672,3120.180,16.39,37.07,33.93,1.339,1.887,0.53,3,11\\n2010-09-11T21:23:50.40Z,53.6372992,-114.2040527,3113.655,15.71,37.84,33.65,1.336,1.889,0.53,3,11\\n2010-09-11T21:23:50.60Z,53.6373264,-114.2039361,3107.089,15.32,38.60,33.68,1.340,1.899,0.55,3,11\\n2010-09-11T21:23:50.80Z,53.6373523,-114.2038170,3100.716,14.33,39.24,33.39,1.340,1.900,0.55,3,11\\n2010-09-11T21:23:51.00Z,53.6373769,-114.2036965,3094.371,13.47,39.72,33.09,1.338,1.900,0.55,3,11\\n2010-09-11T21:23:51.20Z,53.6374003,-114.2035745,3088.082,12.58,40.24,32.83,1.339,1.906,0.59,3,11\\n2010-09-11T21:23:51.40Z,53.6374220,-114.2034509,3081.853,11.73,40.73,32.56,1.341,1.915,0.57,3,11\\n2010-09-11T21:23:51.60Z,53.6374414,-114.2033259,3075.666,10.54,41.17,32.28,1.345,1.923,0.57,3,11\\n2010-09-11T21:23:51.80Z,53.6374586,-114.2031996,3069.540,9.43,41.66,32.01,1.347,1.929,0.57,3,11\\n2010-09-11T21:23:52.00Z,53.6374741,-114.2030722,3063.500,8.50,42.01,31.64,1.348,1.930,0.57,3,11\\n2010-09-11T21:23:52.20Z,53.6374882,-114.2029434,3057.493,7.71,42.44,31.34,1.348,1.927,0.57,3,11\\n2010-09-11T21:23:52.40Z,53.6375004,-114.2028133,3051.528,6.70,42.87,31.01,1.347,1.924,0.56,3,11\\n2010-09-11T21:23:52.60Z,53.6375113,-114.2026825,3045.643,5.97,43.12,30.71,1.345,1.919,0.55,3,11\\n2010-09-11T21:23:52.80Z,53.6375210,-114.2025510,3039.809,5.14,43.36,30.43,1.342,1.911,0.55,3,11\\n2010-09-11T21:23:53.00Z,53.6375295,-114.2024189,3033.978,4.50,43.65,30.19,1.332,1.889,0.52,3,11\\n2010-09-11T21:23:53.20Z,53.6375371,-114.2022860,3028.218,4.10,43.87,29.90,1.319,1.861,0.50,3,11\\n2010-09-11T21:23:53.40Z,53.6375442,-114.2021527,3022.414,3.77,43.94,29.70,1.312,1.853,0.49,3,11\\n2010-09-11T21:23:53.60Z,53.6375509,-114.2020192,3016.611,3.62,44.04,29.56,1.309,1.853,0.49,3,11\\n2010-09-11T21:23:53.80Z,53.6375575,-114.2018854,3010.845,3.57,44.20,29.41,1.309,1.857,0.50,3,11\\n2010-09-11T21:23:54.00Z,53.6375638,-114.2017512,3005.151,3.48,44.25,29.24,1.312,1.866,0.50,3,11\\n2010-09-11T21:23:54.20Z,53.6375702,-114.2016169,2999.450,3.53,44.33,29.13,1.319,1.882,0.51,3,11\\n2010-09-11T21:23:54.40Z,53.6375768,-114.2014828,2993.747,3.59,44.29,29.02,1.333,1.912,0.56,3,11\\n2010-09-11T21:23:54.60Z,53.6375836,-114.2013487,2988.114,3.74,44.31,28.90,1.345,1.937,0.57,3,11\\n2010-09-11T21:23:54.80Z,53.6375906,-114.2012145,2982.480,3.83,44.32,28.79,1.358,1.963,0.58,3,11\\n2010-09-11T21:23:55.00Z,53.6375974,-114.2010802,2976.917,3.73,44.32,28.65,1.369,1.987,0.57,3,11\\n2010-09-11T21:23:55.20Z,53.6376036,-114.2009456,2971.346,3.38,44.43,28.55,1.381,2.020,0.56,3,11\\n2010-09-11T21:23:55.40Z,53.6376093,-114.2008107,2965.804,3.19,44.48,28.45,1.390,2.052,0.56,3,11\\n2010-09-11T21:23:55.60Z,53.6376149,-114.2006755,2960.364,3.04,44.56,28.29,1.396,2.071,0.56,3,11\\n2010-09-11T21:23:55.80Z,53.6376204,-114.2005402,2954.935,3.04,44.54,28.16,1.402,2.089,0.56,3,11\\n2010-09-11T21:23:56.00Z,53.6376253,-114.2004052,2949.532,2.65,44.45,28.02,1.407,2.104,0.54,3,11\\n2010-09-11T21:23:56.20Z,53.6376291,-114.2002703,2944.155,2.01,44.40,27.89,1.415,2.130,0.54,3,11\\n2010-09-11T21:23:56.40Z,53.6376317,-114.2001353,2938.781,1.35,44.52,27.76,1.425,2.166,0.55,3,11\\n2010-09-11T21:23:56.60Z,53.6376336,-114.2000004,2933.369,0.97,44.45,27.67,1.436,2.203,0.55,3,11\\n2010-09-11T21:23:56.80Z,53.6376351,-114.1998649,2927.995,0.79,44.56,27.58,1.446,2.220,0.56,3,11\\n2010-09-11T21:23:57.00Z,53.6376364,-114.1997295,2922.683,0.60,44.50,27.47,1.452,2.226,0.55,3,11\\n2010-09-11T21:23:57.20Z,53.6376364,-114.1995942,2917.407,0.10,44.45,27.33,1.461,2.246,0.52,3,11\\n2010-09-11T21:23:57.40Z,53.6376348,-114.1994594,2912.117,-1.05,44.33,27.20,1.469,2.265,0.52,3,11\\n2010-09-11T21:23:57.60Z,53.6376313,-114.1993251,2906.783,-2.10,44.17,27.13,1.477,2.274,0.52,3,11\\n2010-09-11T21:23:57.80Z,53.6376263,-114.1991915,2901.459,-2.86,44.12,27.09,1.487,2.297,0.52,3,11\\n2010-09-11T21:23:58.00Z,53.6376201,-114.1990581,2896.116,-3.51,44.16,27.09,1.490,2.302,0.52,3,11\\n2010-09-11T21:23:58.20Z,53.6376126,-114.1989249,2890.789,-4.31,43.96,27.02,1.496,2.314,0.52,3,11\\n2010-09-11T21:23:58.40Z,53.6376032,-114.1987915,2885.444,-5.42,43.99,26.94,1.505,2.327,0.54,3,11\\n2010-09-11T21:23:58.60Z,53.6375931,-114.1986578,2880.240,-5.61,43.78,26.82,1.475,2.248,0.55,3,10\\n2010-09-11T21:23:58.80Z,53.6375824,-114.1985245,2875.126,-6.02,43.63,26.59,1.443,2.177,0.53,3,10\\n2010-09-11T21:23:59.00Z,53.6375718,-114.1983922,2869.995,-5.89,43.39,26.40,1.418,2.132,0.53,3,10\\n2010-09-11T21:23:59.20Z,53.6375613,-114.1982612,2864.807,-5.47,43.17,26.31,1.406,2.116,0.55,3,10\\n2010-09-11T21:23:59.40Z,53.6375522,-114.1981314,2859.744,-4.89,42.49,26.01,1.398,2.104,0.55,3,10\\n2010-09-11T21:23:59.60Z,53.6375438,-114.1980022,2854.658,-4.75,42.57,25.87,1.397,2.104,0.54,3,11\\n2010-09-11T21:23:59.80Z,53.6375359,-114.1978737,2849.549,-4.32,42.31,25.79,1.398,2.107,0.54,3,11\\n2010-09-11T21:24:00.00Z,53.6375288,-114.1977456,2844.432,-3.89,42.30,25.76,1.401,2.112,0.54,3,11\\n2010-09-11T21:24:00.20Z,53.6375227,-114.1976174,2839.319,-3.36,42.34,25.73,1.400,2.116,0.53,3,11\\n2010-09-11T21:24:00.40Z,53.6375173,-114.1974900,2834.218,-3.05,42.10,25.72,1.399,2.124,0.52,3,11\\n2010-09-11T21:24:00.60Z,53.6375119,-114.1973627,2829.118,-3.00,42.12,25.68,1.396,2.120,0.52,3,11\\n2010-09-11T21:24:00.80Z,53.6375062,-114.1972353,2824.116,-3.30,41.97,25.54,1.395,2.103,0.51,3,11\\n2010-09-11T21:24:01.00Z,53.6374994,-114.1971087,2819.085,-3.95,41.83,25.42,1.392,2.076,0.50,3,11\\n2010-09-11T21:24:01.20Z,53.6374913,-114.1969825,2813.988,-4.59,41.63,25.39,1.388,2.052,0.49,3,11\\n2010-09-11T21:24:01.40Z,53.6374824,-114.1968566,2808.931,-5.03,41.60,25.29,1.385,2.031,0.49,3,11\\n2010-09-11T21:24:01.60Z,53.6374728,-114.1967308,2803.858,-5.38,41.56,25.28,1.386,2.031,0.50,3,11\\n2010-09-11T21:24:01.80Z,53.6374629,-114.1966050,2798.761,-5.54,41.62,25.28,1.387,2.031,0.50,3,11\\n2010-09-11T21:24:02.00Z,53.6374533,-114.1964795,2793.697,-5.52,41.49,25.24,1.390,2.043,0.50,3,11\\n2010-09-11T21:24:02.20Z,53.6374432,-114.1963530,2788.629,-5.54,41.47,25.19,1.393,2.062,0.51,3,11\\n2010-09-11T21:24:02.40Z,53.6374334,-114.1962274,2783.587,-5.43,41.45,25.17,1.396,2.082,0.50,3,11\\n2010-09-11T21:24:02.60Z,53.6374242,-114.1961021,2778.525,-5.17,41.47,25.15,1.401,2.105,0.52,3,11\\n2010-09-11T21:24:02.80Z,53.6374157,-114.1959770,2773.452,-4.68,41.33,25.15,1.418,2.133,0.55,3,11\\n2010-09-11T21:24:03.00Z,53.6374087,-114.1958528,2768.356,-3.87,41.07,25.18,1.442,2.161,0.56,3,11\\n2010-09-11T21:24:03.20Z,53.6374032,-114.1957285,2763.213,-3.18,41.24,25.27,1.448,2.178,0.54,3,13\\n2010-09-11T21:24:03.40Z,53.6373974,-114.1956053,2757.950,-3.76,41.25,25.78,1.460,2.189,0.60,3,13\\n2010-09-11T21:24:03.60Z,53.6373920,-114.1954812,2752.802,-3.45,41.23,26.01,1.471,2.180,0.62,3,13\\n2010-09-11T21:24:03.80Z,53.6373863,-114.1953569,2747.751,-3.45,40.83,25.97,1.473,2.164,0.57,3,13\\n2010-09-11T21:24:04.00Z,53.6373806,-114.1952341,2742.751,-3.38,40.41,25.62,1.466,2.143,0.54,3,12\\n2010-09-11T21:24:04.20Z,53.6373740,-114.1951110,2737.654,-3.81,40.64,25.44,1.456,2.122,0.49,3,13\\n2010-09-11T21:24:04.40Z,53.6373664,-114.1949878,2732.523,-4.39,40.73,25.42,1.451,2.108,0.48,3,13\\n2010-09-11T21:24:04.60Z,53.6373576,-114.1948647,2727.407,-4.98,40.68,25.43,1.455,2.118,0.50,3,13\\n2010-09-11T21:24:04.80Z,53.6373477,-114.1947419,2722.244,-5.57,40.56,25.50,1.459,2.127,0.51,3,13\\n2010-09-11T21:24:05.00Z,53.6373365,-114.1946193,2717.099,-6.29,40.42,25.54,1.463,2.144,0.49,3,13\\n2010-09-11T21:24:05.20Z,53.6373247,-114.1944969,2711.941,-6.53,40.37,25.58,1.468,2.163,0.50,3,13\\n2010-09-11T21:24:05.40Z,53.6373131,-114.1943751,2706.756,-6.42,40.29,25.65,1.472,2.175,0.52,3,13\\n2010-09-11T21:24:05.60Z,53.6373021,-114.1942536,2701.589,-6.13,40.25,25.71,1.477,2.181,0.53,3,13\\n2010-09-11T21:24:05.80Z,53.6372915,-114.1941316,2696.446,-5.88,40.27,25.72,1.481,2.186,0.53,3,13\\n2010-09-11T21:24:06.00Z,53.6372808,-114.1940098,2691.269,-5.89,40.17,25.76,1.484,2.188,0.51,3,13\\n2010-09-11T21:24:06.20Z,53.6372698,-114.1938881,2686.067,-6.06,40.09,25.81,1.480,2.188,0.49,3,13\\n2010-09-11T21:24:06.40Z,53.6372583,-114.1937666,2680.836,-6.33,40.08,25.88,1.479,2.188,0.50,3,13\\n2010-09-11T21:24:06.60Z,53.6372465,-114.1936451,2675.592,-6.50,40.11,25.94,1.471,2.165,0.50,3,13\\n2010-09-11T21:24:06.80Z,53.6372349,-114.1935241,2670.373,-6.42,40.02,25.96,1.463,2.141,0.51,3,13\\n2010-09-11T21:24:07.00Z,53.6372232,-114.1934031,2665.181,-6.58,40.03,25.93,1.458,2.120,0.53,3,13\\n2010-09-11T21:24:07.20Z,53.6372109,-114.1932823,2659.917,-6.85,40.02,25.97,1.451,2.087,0.53,3,13\\n2010-09-11T21:24:07.40Z,53.6371983,-114.1931611,2654.746,-7.06,40.05,25.89,1.448,2.063,0.53,3,13\\n2010-09-11T21:24:07.60Z,53.6371856,-114.1930398,2649.657,-7.21,40.05,25.80,1.441,2.038,0.53,3,13\\n2010-09-11T21:24:07.80Z,53.6371729,-114.1929182,2644.587,-7.14,40.14,25.71,1.433,2.019,0.54,3,13\\n2010-09-11T21:24:08.00Z,53.6371606,-114.1927963,2639.523,-6.90,40.26,25.60,1.422,1.996,0.55,3,13\\n2010-09-11T21:24:08.20Z,53.6371491,-114.1926740,2634.500,-6.56,40.37,25.47,1.407,1.962,0.53,3,13\\n2010-09-11T21:24:08.40Z,53.6371385,-114.1925521,2629.419,-5.73,40.27,25.44,1.385,1.929,0.49,3,13\\n2010-09-11T21:24:08.60Z,53.6371292,-114.1924304,2624.325,-5.07,40.25,25.44,1.363,1.898,0.48,3,13\\n2010-09-11T21:24:08.80Z,53.6371209,-114.1923087,2619.203,-4.37,40.31,25.44,1.342,1.869,0.48,3,13\\n2010-09-11T21:24:09.00Z,53.6371139,-114.1921877,2614.071,-3.68,40.00,25.46,1.322,1.841,0.48,3,13\\n2010-09-11T21:24:09.20Z,53.6371079,-114.1920676,2608.857,-3.00,39.80,25.50,1.304,1.815,0.48,3,13\\n2010-09-11T21:24:09.40Z,53.6371032,-114.1919475,2603.695,-2.43,39.79,25.53,1.286,1.790,0.47,3,13\\n2010-09-11T21:24:09.60Z,53.6370994,-114.1918278,2598.508,-1.96,39.81,25.69,1.270,1.766,0.51,3,13\\n2010-09-11T21:24:09.80Z,53.6370961,-114.1917079,2593.337,-1.66,39.65,25.65,1.260,1.753,0.53,3,13\\n2010-09-11T21:24:10.00Z,53.6370932,-114.1915883,2588.160,-1.36,39.63,25.64,1.253,1.743,0.54,3,13\\n2010-09-11T21:24:10.20Z,53.6370908,-114.1914689,2583.051,-1.26,39.49,25.56,1.247,1.733,0.55,3,13\\n2010-09-11T21:24:10.40Z,53.6370886,-114.1913495,2577.984,-1.22,39.51,25.46,1.240,1.717,0.55,3,13\\n2010-09-11T21:24:10.60Z,53.6370864,-114.1912301,2572.964,-1.25,39.51,25.32,1.234,1.703,0.55,3,13\\n2010-09-11T21:24:10.80Z,53.6370844,-114.1911112,2567.928,-1.13,39.42,25.22,1.229,1.690,0.55,3,13\\n2010-09-11T21:24:11.00Z,53.6370828,-114.1909925,2562.896,0.80,39.32,25.12,1.224,1.676,0.54,3,13\\n2010-09-11T21:24:11.20Z,53.6370823,-114.1908748,2557.872,0.19,38.94,24.99,1.217,1.660,0.52,3,13\\n2010-09-11T21:24:11.40Z,53.6370823,-114.1907565,2552.837,0.00,39.16,24.96,1.215,1.662,0.51,3,13\\n2010-09-11T21:24:11.60Z,53.6370825,-114.1906377,2547.791,0.16,39.30,24.97,1.221,1.678,0.50,3,13\\n2010-09-11T21:24:11.80Z,53.6370829,-114.1905186,2542.760,0.23,39.35,24.93,1.228,1.696,0.50,3,13\\n2010-09-11T21:24:12.00Z,53.6370836,-114.1903994,2537.698,0.42,39.50,25.01,1.236,1.718,0.50,3,13\\n2010-09-11T21:24:12.20Z,53.6370844,-114.1902802,2532.623,0.47,39.52,25.10,1.244,1.742,0.48,3,13\\n2010-09-11T21:24:12.40Z,53.6370855,-114.1901608,2527.531,0.66,39.54,25.19,1.252,1.770,0.47,3,13\\n2010-09-11T21:24:12.60Z,53.6370861,-114.1900413,2522.433,0.37,39.61,25.28,1.254,1.790,0.46,3,13\\n2010-09-11T21:24:12.80Z,53.6370856,-114.1899219,2517.263,0.34,39.52,25.36,1.248,1.780,0.45,3,13\\n2010-09-11T21:24:13.00Z,53.6370837,-114.1898022,2512.047,-1.07,39.58,25.47,1.243,1.772,0.45,3,13\\n2010-09-11T21:24:13.20Z,53.6370809,-114.1896827,2506.906,-1.65,39.48,25.47,1.253,1.795,0.47,3,13\\n2010-09-11T21:24:13.40Z,53.6370768,-114.1895628,2501.693,-2.15,39.40,25.52,1.262,1.817,0.44,3,13\\n2010-09-11T21:24:13.60Z,53.6370717,-114.1894432,2496.457,-2.69,39.29,25.54,1.267,1.838,0.43,3,13\\n2010-09-11T21:24:13.80Z,53.6370646,-114.1893243,2491.051,-3.94,39.49,25.79,1.266,1.847,0.44,3,13\\n2010-09-11T21:24:14.00Z,53.6370573,-114.1892069,2485.751,-4.12,38.82,25.89,1.266,1.837,0.52,3,13\\n2010-09-11T21:24:14.20Z,53.6370493,-114.1890916,2480.396,-4.63,38.23,26.07,1.261,1.823,0.52,3,13\\n2010-09-11T21:24:14.40Z,53.6370411,-114.1889781,2475.185,-4.83,37.32,25.97,1.258,1.813,0.52,3,13\\n2010-09-11T21:24:14.60Z,53.6370318,-114.1888646,2469.763,-5.27,37.69,26.19,1.259,1.819,0.46,3,13\\n2010-09-11T21:24:15.00Z,53.6370132,-114.1886390,2459.035,-5.25,37.32,26.33,1.271,1.855,0.51,3,13\\n2010-09-11T21:24:15.20Z,53.6370039,-114.1885256,2453.658,-5.17,37.44,26.35,1.277,1.876,0.47,3,13\\n2010-09-11T21:24:15.40Z,53.6369949,-114.1884127,2448.278,-4.93,37.34,26.39,1.284,1.897,0.47,3,13\\n2010-09-11T21:24:15.60Z,53.6369860,-114.1882996,2442.840,-4.76,37.24,26.43,1.289,1.916,0.46,3,13\\n2010-09-11T21:24:15.80Z,53.6369778,-114.1881872,2437.411,-4.59,37.39,26.49,1.292,1.936,0.46,3,13\\n2010-09-11T21:24:16.00Z,53.6369697,-114.1880756,2431.884,-4.43,37.10,26.65,1.297,1.954,0.46,3,13\\n2010-09-11T21:24:16.20Z,53.6369614,-114.1879645,2426.253,-4.41,37.05,26.89,1.304,1.969,0.47,3,13\\n2010-09-11T21:24:16.40Z,53.6369528,-114.1878536,2420.596,-4.63,36.97,27.18,1.310,1.985,0.45,3,13\\n2010-09-11T21:24:16.60Z,53.6369439,-114.1877431,2414.859,-4.72,36.94,27.47,1.314,1.998,0.45,3,13\\n2010-09-11T21:24:16.80Z,53.6369345,-114.1876331,2409.002,-4.98,36.74,27.81,1.317,2.008,0.45,3,13\\n2010-09-11T21:24:17.00Z,53.6369245,-114.1875241,2402.988,-5.17,36.52,28.22,1.312,2.004,0.44,3,13\\n2010-09-11T21:24:17.20Z,53.6369143,-114.1874158,2396.908,-5.37,36.31,28.63,1.307,1.999,0.44,3,13\\n2010-09-11T21:24:17.40Z,53.6369040,-114.1873080,2390.806,-5.44,36.07,29.03,1.303,1.997,0.45,3,13\\n2010-09-11T21:24:17.60Z,53.6368933,-114.1872006,2384.569,-5.63,35.99,29.52,1.301,1.993,0.45,3,13\\n2010-09-11T21:24:17.80Z,53.6368822,-114.1870942,2378.118,-5.77,35.84,30.19,1.298,1.984,0.46,3,13\\n2010-09-11T21:24:18.00Z,53.6368711,-114.1869887,2371.436,-5.75,35.60,30.92,1.292,1.954,0.46,3,12\\n2010-09-11T21:24:18.20Z,53.6368601,-114.1868838,2364.678,-5.81,35.42,31.59,1.287,1.926,0.47,3,12\\n2010-09-11T21:24:18.40Z,53.6368491,-114.1867800,2357.774,-5.92,34.98,32.24,1.284,1.898,0.47,3,12\\n2010-09-11T21:24:18.60Z,53.6368381,-114.1866767,2350.803,-5.89,34.74,32.82,1.282,1.872,0.47,3,12\\n2010-09-11T21:24:18.80Z,53.6368272,-114.1865740,2343.800,-5.97,34.40,33.35,1.284,1.864,0.46,3,13\\n2010-09-11T21:24:19.00Z,53.6368161,-114.1864718,2336.676,-5.98,34.31,33.95,1.286,1.864,0.46,3,13\\n2010-09-11T21:24:19.20Z,53.6368051,-114.1863700,2329.433,-5.89,34.03,34.50,1.287,1.865,0.46,3,13\\n2010-09-11T21:24:19.40Z,53.6367944,-114.1862699,2322.096,-5.67,33.37,35.02,1.288,1.868,0.45,3,13\\n2010-09-11T21:24:19.60Z,53.6367838,-114.1861710,2314.623,-5.56,33.14,35.56,1.296,1.879,0.45,3,13\\n2010-09-11T21:24:19.80Z,53.6367731,-114.1860755,2306.843,-5.42,32.05,36.22,1.298,1.867,0.46,3,13\\n2010-09-11T21:24:20.00Z,53.6367630,-114.1859808,2299.202,-5.22,31.50,36.60,1.304,1.875,0.46,3,13\\n2010-09-11T21:24:20.20Z,53.6367532,-114.1858884,2291.468,-4.93,30.29,36.69,1.309,1.877,0.47,3,13\\n2010-09-11T21:24:20.40Z,53.6367440,-114.1858007,2283.815,-4.90,28.79,36.91,1.311,1.884,0.46,3,13\\n2010-09-11T21:24:20.60Z,53.6367346,-114.1857180,2276.150,-5.13,27.12,37.11,1.309,1.882,0.47,3,13\\n2010-09-11T21:24:20.80Z,53.6367235,-114.1856401,2268.426,-6.30,25.71,37.36,1.310,1.881,0.51,3,13\\n2010-09-11T21:24:21.00Z,53.6367119,-114.1855639,2260.783,-6.42,25.32,37.53,1.324,1.901,0.59,3,13\\n2010-09-11T21:24:21.20Z,53.6367010,-114.1854899,2253.249,-5.96,24.37,37.46,1.353,1.939,0.63,3,13\\n2010-09-11T21:24:21.40Z,53.6366910,-114.1854194,2245.951,-5.67,22.99,37.09,1.382,1.963,0.60,3,13\\n2010-09-11T21:24:21.60Z,53.6366823,-114.1853537,2238.636,-4.84,21.36,36.78,1.399,1.972,0.61,3,13\\n2010-09-11T21:24:21.80Z,53.6366746,-114.1852940,2231.492,-4.45,19.38,36.39,1.422,1.983,0.62,3,12\\n2010-09-11T21:24:22.00Z,53.6366662,-114.1852379,2224.596,-4.85,18.12,35.82,1.453,2.002,0.64,3,12\\n2010-09-11T21:24:22.20Z,53.6366567,-114.1851855,2217.806,-5.26,16.77,35.27,1.486,2.037,0.66,3,12\\n2010-09-11T21:24:22.40Z,53.6366462,-114.1851409,2211.963,-6.07,13.98,34.00,1.523,2.077,0.66,3,13\\n2010-09-11T21:24:22.60Z,53.6366354,-114.1851034,2206.788,-7.13,11.76,32.49,1.549,2.104,0.70,3,13\\n2010-09-11T21:24:22.80Z,53.6366237,-114.1850695,2201.950,-7.85,10.45,31.06,1.583,2.149,0.89,3,13\\n2010-09-11T21:24:23.00Z,53.6366117,-114.1850274,2197.437,-8.39,12.92,29.74,1.602,2.191,0.98,3,13\\n2010-09-11T21:24:23.20Z,53.6366009,-114.1849848,2193.680,-8.01,12.96,28.05,1.611,2.216,1.01,3,13\\n2010-09-11T21:24:23.40Z,53.6365939,-114.1849401,2190.757,-6.22,13.07,26.00,1.612,2.220,1.05,3,13\\n2010-09-11T21:24:23.60Z,53.6365853,-114.1848980,2187.501,-6.14,12.48,24.47,1.608,2.233,1.03,3,13\\n2010-09-11T21:24:23.80Z,53.6365699,-114.1848568,2183.888,-9.06,12.74,23.52,1.610,2.285,1.20,3,13\\n2010-09-11T21:24:24.00Z,53.6365506,-114.1848148,2180.291,-11.37,12.68,22.70,1.620,2.338,1.22,3,13\\n2010-09-11T21:24:24.20Z,53.6365296,-114.1847734,2177.150,-12.58,12.20,21.70,1.620,2.369,1.19,3,13\\n2010-09-11T21:24:24.40Z,53.6365074,-114.1847372,2173.954,-13.37,10.93,20.90,1.626,2.398,1.10,3,13\\n2010-09-11T21:24:24.60Z,53.6364830,-114.1847045,2170.749,-14.34,9.50,20.22,1.622,2.428,0.99,3,13\\n2010-09-11T21:24:24.80Z,53.6364563,-114.1846763,2167.423,-15.64,8.03,19.74,1.618,2.459,0.93,3,13\\n2010-09-11T21:24:25.00Z,53.6364284,-114.1846566,2164.186,-16.38,5.57,19.27,1.617,2.486,0.85,3,13\\n2010-09-11T21:24:25.20Z,53.6364000,-114.1846456,2161.002,-16.88,2.95,18.83,1.615,2.509,0.78,3,13\\n2010-09-11T21:24:25.40Z,53.6363700,-114.1846407,2157.935,-17.62,0.88,18.38,1.619,2.532,0.73,3,13\\n2010-09-11T21:24:25.60Z,53.6363385,-114.1846413,2154.862,-18.16,0.79,17.98,1.622,2.562,0.68,3,13\\n2010-09-11T21:24:25.80Z,53.6363068,-114.1846462,2152.157,-18.33,-2.28,17.40,1.625,2.587,0.69,3,13\\n2010-09-11T21:24:26.00Z,53.6362750,-114.1846548,2150.048,-18.49,-3.73,16.53,1.623,2.579,0.68,3,13\\n2010-09-11T21:24:26.20Z,53.6362433,-114.1846660,2148.305,-18.31,-4.76,15.52,1.623,2.565,0.67,3,13\\n2010-09-11T21:24:26.40Z,53.6362103,-114.1846757,2146.882,-18.90,-4.28,14.43,1.621,2.549,0.67,3,13\\n2010-09-11T21:24:26.60Z,53.6361785,-114.1846780,2145.789,-18.57,-2.25,13.27,1.607,2.492,0.67,3,13\\n2010-09-11T21:24:26.80Z,53.6361438,-114.1846785,2144.525,-19.80,0.84,12.40,1.590,2.443,0.70,3,13\\n2010-09-11T21:24:27.00Z,53.6361086,-114.1846720,2142.944,-20.00,1.70,11.88,1.584,2.422,0.76,3,13\\n2010-09-11T21:24:27.20Z,53.6360725,-114.1846614,2141.473,-20.60,2.63,11.27,1.581,2.405,0.77,3,12\\n2010-09-11T21:24:27.40Z,53.6360349,-114.1846492,2139.394,-21.01,3.78,11.13,1.593,2.450,0.71,3,12\\n2010-09-11T21:24:27.60Z,53.6359981,-114.1846324,2137.694,-20.63,4.91,10.75,1.607,2.484,0.73,3,12\\n2010-09-11T21:24:27.80Z,53.6359622,-114.1846116,2136.515,-20.39,6.12,10.05,1.621,2.500,0.74,3,12\\n2010-09-11T21:24:28.00Z,53.6359269,-114.1845902,2135.253,-19.96,6.53,9.58,1.623,2.511,0.65,3,13\\n2010-09-11T21:24:28.20Z,53.6358928,-114.1845676,2134.215,-19.26,6.85,9.03,1.626,2.522,0.67,3,13\\n2010-09-11T21:24:28.40Z,53.6358610,-114.1845403,2132.722,-17.95,8.46,8.85,1.625,2.541,0.76,3,13\\n2010-09-11T21:24:28.60Z,53.6358302,-114.1845071,2131.900,-17.86,10.18,8.39,1.613,2.487,0.80,3,12\\n2010-09-11T21:24:28.80Z,53.6357992,-114.1844720,2131.102,-18.18,10.78,7.93,1.588,2.449,0.63,3,12\\n2010-09-11T21:24:29.00Z,53.6357663,-114.1844395,2129.759,-18.53,10.36,7.73,1.574,2.485,0.62,3,13\\n2010-09-11T21:24:29.20Z,53.6357339,-114.1844087,2128.669,-18.17,9.62,7.45,1.559,2.507,0.61,3,13\\n2010-09-11T21:24:29.40Z,53.6357029,-114.1843802,2127.827,-17.63,8.91,7.05,1.543,2.489,0.62,3,13\\n2010-09-11T21:24:29.60Z,53.6356718,-114.1843541,2126.693,-17.28,8.45,6.87,1.537,2.512,0.63,3,13\\n2010-09-11T21:24:29.80Z,53.6356419,-114.1843286,2125.602,-16.86,8.25,6.67,1.530,2.521,0.64,3,13\\n2010-09-11T21:24:30.00Z,53.6356125,-114.1843042,2124.477,-16.81,7.94,6.49,1.521,2.523,0.64,3,13\\n2010-09-11T21:24:30.20Z,53.6355839,-114.1842808,2123.424,-16.69,7.37,6.34,1.510,2.528,0.61,3,13\\n2010-09-11T21:24:30.40Z,53.6355549,-114.1842580,2122.467,-16.42,6.67,6.26,1.490,2.492,0.57,3,13\\n2010-09-11T21:24:30.60Z,53.6355266,-114.1842368,2121.371,-16.26,6.38,6.17,1.478,2.468,0.57,3,12\\n2010-09-11T21:24:30.80Z,53.6354984,-114.1842193,2120.232,-16.19,5.80,6.10,1.458,2.439,0.53,3,13\\n2010-09-11T21:24:31.00Z,53.6354706,-114.1842026,2119.392,-16.16,5.53,5.97,1.434,2.373,0.52,3,13\\n2010-09-11T21:24:31.20Z,53.6354423,-114.1841847,2118.193,-16.08,5.70,6.00,1.423,2.326,0.60,3,13\\n2010-09-11T21:24:31.40Z,53.6354140,-114.1841663,2117.065,-15.79,5.91,6.04,1.406,2.259,0.54,3,13\\n2010-09-11T21:24:31.60Z,53.6353864,-114.1841456,2116.035,-15.79,6.23,6.02,1.393,2.197,0.54,3,13\\n2010-09-11T21:24:31.80Z,53.6353582,-114.1841262,2114.793,-15.98,6.54,6.06,1.384,2.146,0.56,3,13\\n2010-09-11T21:24:32.00Z,53.6353301,-114.1841042,2113.627,-15.80,7.01,6.14,1.378,2.106,0.57,3,13\\n2010-09-11T21:24:32.20Z,53.6353023,-114.1840801,2112.601,-15.73,7.43,6.16,1.374,2.074,0.58,3,13\\n2010-09-11T21:24:32.40Z,53.6352739,-114.1840560,2111.397,-15.58,7.84,6.23,1.379,2.095,0.59,3,13\\n2010-09-11T21:24:32.60Z,53.6352455,-114.1840309,2110.158,-15.69,8.34,6.27,1.385,2.123,0.59,3,13\\n2010-09-11T21:24:32.80Z,53.6352172,-114.1840028,2109.136,-15.77,9.12,6.28,1.391,2.104,0.61,3,13\\n2010-09-11T21:24:33.00Z,53.6351885,-114.1839733,2107.873,-15.84,9.59,6.35,1.400,2.142,0.59,3,13\\n2010-09-11T21:24:33.20Z,53.6351603,-114.1839446,2106.594,-15.88,9.84,6.39,1.406,2.180,0.59,3,13\\n2010-09-11T21:24:33.40Z,53.6351317,-114.1839133,2105.227,-15.94,10.31,6.48,1.410,2.199,0.61,3,13\\n2010-09-11T21:24:33.60Z,53.6351026,-114.1838823,2103.747,-15.84,10.39,6.58,1.406,2.170,0.61,3,12\\n2010-09-11T21:24:33.80Z,53.6350743,-114.1838508,2102.394,-15.79,10.48,6.57,1.392,2.127,0.57,3,13\\n2010-09-11T21:24:34.00Z,53.6350455,-114.1838197,2100.990,-16.14,10.25,6.62,1.376,2.087,0.53,3,13\\n2010-09-11T21:24:34.20Z,53.6350157,-114.1837903,2099.504,-16.45,9.76,6.65,1.360,2.053,0.52,3,12\\n2010-09-11T21:24:34.40Z,53.6349867,-114.1837610,2098.185,-16.44,9.94,6.62,1.337,2.012,0.49,3,12\\n2010-09-11T21:24:34.60Z,53.6349571,-114.1837314,2096.896,-16.55,9.69,6.56,1.314,1.987,0.48,3,13\\n2010-09-11T21:24:34.80Z,53.6349276,-114.1837024,2095.505,-16.54,9.18,6.56,1.290,1.963,0.48,3,13\\n2010-09-11T21:24:35.00Z,53.6348978,-114.1836755,2094.123,-16.72,8.71,6.58,1.285,1.963,0.55,3,12\\n2010-09-11T21:24:35.20Z,53.6348678,-114.1836494,2092.746,-16.90,8.37,6.57,1.283,1.965,0.57,3,12\\n2010-09-11T21:24:35.40Z,53.6348375,-114.1836252,2091.378,-17.06,7.90,6.54,1.278,1.968,0.57,3,12\\n2010-09-11T21:24:35.60Z,53.6348069,-114.1836023,2090.039,-17.09,7.53,6.53,1.270,1.953,0.55,3,13\\n2010-09-11T21:24:35.80Z,53.6347766,-114.1835805,2088.670,-17.12,7.39,6.50,1.264,1.940,0.56,3,13\\n2010-09-11T21:24:36.00Z,53.6347463,-114.1835587,2087.317,-16.93,7.32,6.48,1.261,1.929,0.56,3,13\\n2010-09-11T21:24:36.20Z,53.6347160,-114.1835379,2086.076,-17.11,6.96,6.42,1.269,1.923,0.60,3,13\\n2010-09-11T21:24:36.40Z,53.6346852,-114.1835174,2084.816,-17.26,6.98,6.39,1.275,1.932,0.59,3,13\\n2010-09-11T21:24:36.60Z,53.6346542,-114.1834972,2083.593,-17.51,6.62,6.37,1.277,1.920,0.58,3,13\\n2010-09-11T21:24:36.80Z,53.6346237,-114.1834769,2082.474,-17.19,6.75,6.30,1.274,1.896,0.56,3,13\\n2010-09-11T21:24:37.00Z,53.6345934,-114.1834557,2081.304,-17.04,7.05,6.28,1.272,1.871,0.56,3,13\\n2010-09-11T21:24:37.20Z,53.6345634,-114.1834341,2080.157,-16.81,7.21,6.24,1.270,1.850,0.57,3,13\\n2010-09-11T21:24:37.40Z,53.6345332,-114.1834115,2078.934,-16.94,7.39,6.25,1.266,1.828,0.56,3,13\\n2010-09-11T21:24:37.60Z,53.6345033,-114.1833881,2077.790,-16.86,7.66,6.22,1.261,1.808,0.56,3,13\\n2010-09-11T21:24:37.80Z,53.6344732,-114.1833641,2076.542,-16.70,7.81,6.29,1.261,1.817,0.57,3,13\\n2010-09-11T21:24:38.00Z,53.6344429,-114.1833399,2075.324,-17.04,8.27,6.17,1.262,1.839,0.57,3,13\\n2010-09-11T21:24:38.20Z,53.6344127,-114.1833136,2074.092,-16.74,8.47,6.22,1.252,1.824,0.53,3,13\\n2010-09-11T21:24:38.40Z,53.6343832,-114.1832861,2072.897,-16.31,8.86,6.24,1.233,1.795,0.51,3,13\\n2010-09-11T21:24:38.60Z,53.6343539,-114.1832582,2071.675,-16.30,9.24,6.34,1.215,1.770,0.51,3,13\\n2010-09-11T21:24:38.80Z,53.6343247,-114.1832298,2070.467,-16.40,9.43,6.34,1.200,1.747,0.54,3,13\\n2010-09-11T21:24:39.00Z,53.6342953,-114.1832014,2069.236,-16.40,9.48,6.38,1.189,1.727,0.55,3,13\\n2010-09-11T21:24:39.20Z,53.6342663,-114.1831728,2068.014,-16.08,9.49,6.34,1.187,1.719,0.57,3,13\\n2010-09-11T21:24:39.40Z,53.6342375,-114.1831440,2066.730,-16.04,9.46,6.38,1.188,1.711,0.57,3,13\\n2010-09-11T21:24:39.60Z,53.6342085,-114.1831152,2065.469,-16.16,9.56,6.41,1.188,1.728,0.54,3,13\\n2010-09-11T21:24:39.80Z,53.6341793,-114.1830868,2064.231,-16.24,9.49,6.42,1.184,1.747,0.52,3,13\\n2010-09-11T21:24:40.00Z,53.6341497,-114.1830582,2062.959,-16.42,9.42,6.43,1.180,1.767,0.52,3,13\\n2010-09-11T21:24:40.20Z,53.6341202,-114.1830300,2061.712,-16.44,9.34,6.39,1.176,1.797,0.51,3,13\\n2010-09-11T21:24:40.40Z,53.6340903,-114.1830026,2060.446,-16.60,9.07,6.41,1.173,1.825,0.52,3,13\\n2010-09-11T21:24:40.60Z,53.6340606,-114.1829761,2059.208,-16.58,8.74,6.40,1.172,1.851,0.54,3,13\\n2010-09-11T21:24:40.80Z,53.6340309,-114.1829503,2057.918,-16.47,8.48,6.41,1.172,1.876,0.54,3,13\\n2010-09-11T21:24:41.00Z,53.6340012,-114.1829246,2056.630,-16.60,8.43,6.36,1.167,1.875,0.52,3,13\\n2010-09-11T21:24:41.20Z,53.6339718,-114.1828996,2055.372,-16.43,8.23,6.31,1.160,1.858,0.51,3,13\\n2010-09-11T21:24:41.40Z,53.6339421,-114.1828747,2054.079,-16.60,8.23,6.32,1.154,1.849,0.51,3,13\\n2010-09-11T21:24:41.60Z,53.6339121,-114.1828501,2052.797,-16.72,8.08,6.29,1.147,1.836,0.50,3,13\\n2010-09-11T21:24:41.80Z,53.6338821,-114.1828254,2051.508,-16.65,8.13,6.27,1.141,1.825,0.50,3,13\\n2010-09-11T21:24:42.00Z,53.6338523,-114.1828005,2050.222,-16.54,8.20,6.26,1.139,1.843,0.51,3,13\\n2010-09-11T21:24:42.20Z,53.6338224,-114.1827754,2048.949,-16.55,8.30,6.19,1.139,1.871,0.50,3,13\\n2010-09-11T21:24:42.40Z,53.6337927,-114.1827499,2047.665,-16.55,8.43,6.19,1.134,1.871,0.50,3,13\\n2010-09-11T21:24:42.60Z,53.6337628,-114.1827240,2046.343,-16.61,8.57,6.26,1.129,1.872,0.50,3,13\\n2010-09-11T21:24:42.80Z,53.6337329,-114.1826978,2045.042,-16.62,8.65,6.29,1.123,1.857,0.51,3,13\\n2010-09-11T21:24:43.00Z,53.6337032,-114.1826713,2043.757,-16.44,8.72,6.30,1.117,1.844,0.51,3,13\\n2010-09-11T21:24:43.20Z,53.6336738,-114.1826445,2042.468,-16.38,8.92,6.33,1.113,1.852,0.50,3,13\\n2010-09-11T21:24:43.40Z,53.6336444,-114.1826165,2041.197,-16.27,9.32,6.27,1.109,1.852,0.50,3,13\\n2010-09-11T21:24:43.60Z,53.6336153,-114.1825880,2039.981,-16.20,9.46,6.21,1.108,1.868,0.50,3,13\\n2010-09-11T21:24:43.80Z,53.6335865,-114.1825593,2038.765,-16.00,9.43,6.22,1.110,1.891,0.51,3,13\\n2010-09-11T21:24:44.00Z,53.6335576,-114.1825303,2037.524,-16.07,9.55,6.21,1.113,1.926,0.51,3,13\\n2010-09-11T21:24:44.20Z,53.6335286,-114.1825009,2036.234,-16.04,9.63,6.26,1.118,1.969,0.52,3,13\\n2010-09-11T21:24:44.40Z,53.6334998,-114.1824721,2034.919,-15.97,9.44,6.34,1.121,1.998,0.53,3,13\\n2010-09-11T21:24:44.60Z,53.6334708,-114.1824438,2033.574,-16.08,9.26,6.41,1.133,2.028,0.58,3,13\\n2010-09-11T21:24:44.80Z,53.6334417,-114.1824163,2032.133,-16.09,8.96,6.57,1.143,2.014,0.58,3,13\\n2010-09-11T21:24:45.00Z,53.6334128,-114.1823882,2030.769,-16.02,9.39,6.58,1.158,2.000,0.63,3,13\\n2010-09-11T21:24:45.20Z,53.6333839,-114.1823597,2029.407,-15.94,9.50,6.58,1.180,1.987,0.68,3,13\\n2010-09-11T21:24:45.40Z,53.6333548,-114.1823313,2028.051,-16.18,9.36,6.58,1.191,1.972,0.64,3,13\\n2010-09-11T21:24:45.60Z,53.6333256,-114.1823034,2026.777,-16.29,9.19,6.52,1.206,1.950,0.69,3,13\\n2010-09-11T21:24:45.80Z,53.6332964,-114.1822754,2025.569,-16.25,9.40,6.37,1.228,1.929,0.75,3,13\\n2010-09-11T21:24:46.00Z,53.6332664,-114.1822477,2024.244,-16.75,8.91,6.42,1.253,1.916,0.75,3,13\\n2010-09-11T21:24:46.20Z,53.6332364,-114.1822210,2022.897,-16.67,8.67,6.46,1.278,1.940,0.67,3,12\\n2010-09-11T21:24:46.40Z,53.6332065,-114.1821943,2021.587,-16.62,8.79,6.48,1.294,1.979,0.61,3,12\\n2010-09-11T21:24:46.60Z,53.6331767,-114.1821677,2020.279,-16.56,8.81,6.49,1.300,2.021,0.58,3,13\\n2010-09-11T21:24:46.80Z,53.6331469,-114.1821417,2018.956,-16.51,8.79,6.46,1.303,2.071,0.58,3,13\\n2010-09-11T21:24:47.00Z,53.6331172,-114.1821154,2017.588,-16.51,8.84,6.49,1.305,2.123,0.58,3,13\\n2010-09-11T21:24:47.20Z,53.6330873,-114.1820886,2016.285,-16.64,8.78,6.47,1.307,2.179,0.57,3,13\\n2010-09-11T21:24:47.40Z,53.6330574,-114.1820622,2015.024,-16.67,8.80,6.42,1.308,2.231,0.57,3,12\\n2010-09-11T21:24:47.60Z,53.6330275,-114.1820359,2013.763,-16.57,8.82,6.35,1.307,2.283,0.56,3,12\\n2010-09-11T21:24:47.80Z,53.6329979,-114.1820099,2012.513,-16.47,8.64,6.31,1.306,2.334,0.56,3,12\\n2010-09-11T21:24:48.00Z,53.6329684,-114.1819848,2011.273,-16.47,8.50,6.28,1.304,2.387,0.57,3,12\\n2010-09-11T21:24:48.20Z,53.6329393,-114.1819588,2010.133,-16.63,8.45,6.25,1.302,2.419,0.57,3,12\\n2010-09-11T21:24:48.40Z,53.6329094,-114.1819338,2008.926,-16.58,8.48,6.21,1.301,2.451,0.58,3,12\\n2010-09-11T21:24:48.60Z,53.6328799,-114.1819089,2007.708,-16.60,8.22,6.22,1.302,2.481,0.58,3,12\\n2010-09-11T21:24:48.80Z,53.6328502,-114.1818839,2006.550,-16.60,8.02,6.19,1.299,2.453,0.58,3,12\\n2010-09-11T21:24:49.00Z,53.6328207,-114.1818605,2005.358,-16.49,7.77,6.19,1.296,2.426,0.58,3,12\\n2010-09-11T21:24:49.20Z,53.6327915,-114.1818372,2003.865,-16.12,7.43,6.50,1.297,2.373,0.63,3,12\\n2010-09-11T21:24:49.40Z,53.6327626,-114.1818140,2002.774,-16.32,7.64,6.36,1.310,2.328,0.73,3,11\\n2010-09-11T21:24:49.60Z,53.6327329,-114.1817913,2001.610,-16.44,7.55,6.26,1.319,2.282,0.70,3,13\\n2010-09-11T21:24:49.80Z,53.6327036,-114.1817692,2000.422,-16.48,7.44,6.17,1.323,2.233,0.68,3,13\\n2010-09-11T21:24:50.00Z,53.6326740,-114.1817471,1999.247,-16.58,7.26,6.16,1.330,2.184,0.70,3,13\\n2010-09-11T21:24:50.20Z,53.6326442,-114.1817249,1998.112,-16.58,7.10,6.10,1.337,2.135,0.70,3,13\\n2010-09-11T21:24:50.40Z,53.6326141,-114.1817037,1996.845,-16.84,7.03,6.09,1.345,2.094,0.69,3,13\\n2010-09-11T21:24:50.60Z,53.6325838,-114.1816827,1995.641,-16.81,6.90,6.08,1.354,2.058,0.69,3,13\\n2010-09-11T21:24:50.80Z,53.6325543,-114.1816617,1994.455,-16.72,6.89,6.10,1.362,2.024,0.69,3,13\\n2010-09-11T21:24:51.00Z,53.6325251,-114.1816413,1993.301,-16.59,6.77,6.10,1.364,1.993,0.66,3,13\\n2010-09-11T21:24:51.20Z,53.6324958,-114.1816204,1992.120,-16.50,6.76,6.11,1.368,1.964,0.67,3,13\\n2010-09-11T21:24:51.40Z,53.6324667,-114.1816003,1990.954,-16.43,6.74,6.11,1.372,1.941,0.68,3,13\\n2010-09-11T21:24:51.60Z,53.6324373,-114.1815797,1989.791,-16.46,6.62,6.11,1.381,1.925,0.69,3,13\\n2010-09-11T21:24:51.80Z,53.6324076,-114.1815596,1988.595,-16.54,6.53,6.13,1.391,1.911,0.70,3,13\\n2010-09-11T21:24:52.00Z,53.6323775,-114.1815391,1987.381,-16.65,6.55,6.11,1.403,1.898,0.71,3,13\\n2010-09-11T21:24:52.20Z,53.6323477,-114.1815181,1986.227,-16.54,6.97,6.02,1.418,1.891,0.73,3,13\\n2010-09-11T21:24:52.40Z,53.6323172,-114.1814971,1985.024,-17.01,6.69,6.07,1.421,1.896,0.63,3,13\\n2010-09-11T21:24:52.60Z,53.6322872,-114.1814764,1983.882,-16.75,6.68,6.10,1.418,1.903,0.59,3,13\\n2010-09-11T21:24:52.80Z,53.6322569,-114.1814557,1982.637,-16.64,6.71,6.18,1.410,1.935,0.55,3,13\\n2010-09-11T21:24:53.00Z,53.6322270,-114.1814355,1981.413,-16.55,6.56,6.22,1.394,1.967,0.52,3,13\\n2010-09-11T21:24:53.20Z,53.6321972,-114.1814159,1980.144,-16.66,6.52,6.27,1.372,1.996,0.51,3,13\\n2010-09-11T21:24:53.40Z,53.6321679,-114.1813967,1978.892,-16.63,6.46,6.26,1.350,2.016,0.52,3,13\\n2010-09-11T21:24:53.60Z,53.6321385,-114.1813773,1977.636,-16.59,6.56,6.26,1.325,2.004,0.50,3,13\\n2010-09-11T21:24:53.80Z,53.6321092,-114.1813578,1976.407,-16.43,6.47,6.26,1.302,1.990,0.49,3,13\\n2010-09-11T21:24:54.00Z,53.6320800,-114.1813389,1975.171,-16.39,6.29,6.28,1.287,2.000,0.52,3,13\\n2010-09-11T21:24:54.20Z,53.6320507,-114.1813203,1973.872,-16.35,6.27,6.31,1.277,2.016,0.53,3,13\\n2010-09-11T21:24:54.40Z,53.6320212,-114.1813020,1972.592,-16.45,6.17,6.31,1.270,2.043,0.54,3,13\\n2010-09-11T21:24:54.60Z,53.6319917,-114.1812841,1971.367,-16.55,6.02,6.32,1.260,2.035,0.54,3,13\\n2010-09-11T21:24:54.80Z,53.6319621,-114.1812661,1970.129,-16.63,6.05,6.32,1.256,2.029,0.55,3,13\\n2010-09-11T21:24:55.00Z,53.6319324,-114.1812484,1968.912,-16.58,6.01,6.30,1.247,2.001,0.53,3,13\\n2010-09-11T21:24:55.20Z,53.6319030,-114.1812308,1967.773,-16.50,5.90,6.20,1.238,1.979,0.51,3,13\\n2010-09-11T21:24:55.40Z,53.6318734,-114.1812133,1966.508,-16.51,5.94,6.21,1.230,1.957,0.51,3,13\\n2010-09-11T21:24:55.60Z,53.6318437,-114.1811957,1965.204,-16.48,5.93,6.26,1.224,1.933,0.51,3,13\\n2010-09-11T21:24:55.80Z,53.6318141,-114.1811785,1963.947,-16.56,5.71,6.25,1.215,1.903,0.50,3,13\\n2010-09-11T21:24:56.00Z,53.6317854,-114.1811624,1962.594,-15.75,5.21,6.42,1.222,1.927,0.57,3,13\\n2010-09-11T21:24:56.20Z,53.6317568,-114.1811464,1961.382,-16.06,5.66,6.33,1.233,1.914,0.68,3,13\\n2010-09-11T21:24:56.40Z,53.6317274,-114.1811293,1960.152,-16.45,5.77,6.27,1.253,1.912,0.69,3,13\\n2010-09-11T21:24:56.60Z,53.6316976,-114.1811119,1958.919,-16.64,5.77,6.25,1.273,1.910,0.69,3,13\\n2010-09-11T21:24:56.80Z,53.6316677,-114.1810949,1957.685,-16.61,5.80,6.23,1.292,1.907,0.69,3,13\\n2010-09-11T21:24:57.00Z,53.6316378,-114.1810772,1956.500,-16.65,6.03,6.15,1.305,1.892,0.67,3,13\\n2010-09-11T21:24:57.20Z,53.6316069,-114.1810595,1955.310,-17.32,5.96,6.11,1.316,1.886,0.63,3,13\\n2010-09-11T21:24:57.40Z,53.6315765,-114.1810419,1954.040,-16.97,5.79,6.20,1.316,1.875,0.54,3,13\\n2010-09-11T21:24:57.60Z,53.6315463,-114.1810246,1952.829,-16.92,5.77,6.16,1.302,1.862,0.51,3,13\\n2010-09-11T21:24:57.80Z,53.6315163,-114.1810066,1951.583,-16.83,5.88,6.22,1.285,1.847,0.50,3,13\\n2010-09-11T21:24:58.00Z,53.6314863,-114.1809884,1950.321,-16.83,5.92,6.29,1.269,1.836,0.50,3,12\\n2010-09-11T21:24:58.20Z,53.6314559,-114.1809700,1948.926,-16.87,5.95,6.49,1.250,1.816,0.49,3,13\\n2010-09-11T21:24:58.40Z,53.6314255,-114.1809514,1947.492,-16.88,5.99,6.68,1.232,1.800,0.49,3,13\\n2010-09-11T21:24:58.60Z,53.6313947,-114.1809330,1946.065,-17.07,6.05,6.86,1.217,1.813,0.49,3,13\\n2010-09-11T21:24:58.80Z,53.6313638,-114.1809141,1944.541,-17.10,6.25,7.03,1.206,1.825,0.51,3,12\\n2010-09-11T21:24:59.00Z,53.6313327,-114.1808951,1942.923,-17.08,6.25,7.24,1.192,1.811,0.51,3,13\\n2010-09-11T21:24:59.20Z,53.6313017,-114.1808764,1941.355,-17.22,6.20,7.35,1.179,1.795,0.51,3,13\\n2010-09-11T21:24:59.40Z,53.6312707,-114.1808580,1939.806,-17.39,6.14,7.40,1.171,1.782,0.52,3,13\\n2010-09-11T21:24:59.60Z,53.6312393,-114.1808393,1938.249,-17.50,6.03,7.44,1.163,1.771,0.52,3,13\\n2010-09-11T21:24:59.80Z,53.6312076,-114.1808209,1936.680,-17.70,6.01,7.49,1.157,1.764,0.51,3,13\\n2010-09-11T21:25:00.00Z,53.6311756,-114.1808030,1935.139,-17.88,5.85,7.48,1.151,1.758,0.51,3,13\\n2010-09-11T21:25:00.20Z,53.6311434,-114.1807857,1933.613,-18.04,5.53,7.47,1.150,1.753,0.53,3,13\\n2010-09-11T21:25:00.40Z,53.6311114,-114.1807693,1932.158,-17.98,5.35,7.34,1.150,1.748,0.56,3,13\\n2010-09-11T21:25:00.60Z,53.6310793,-114.1807535,1930.720,-17.93,5.11,7.23,1.152,1.741,0.56,3,13\\n2010-09-11T21:25:00.80Z,53.6310473,-114.1807380,1929.356,-17.92,5.02,7.09,1.156,1.734,0.56,3,13\\n2010-09-11T21:25:01.00Z,53.6310153,-114.1807230,1927.996,-17.98,4.88,6.97,1.159,1.730,0.55,3,13\\n2010-09-11T21:25:01.20Z,53.6309827,-114.1807074,1926.632,-18.28,5.06,6.81,1.150,1.727,0.49,3,13\\n2010-09-11T21:25:01.40Z,53.6309503,-114.1806930,1925.287,-18.14,4.40,6.72,1.141,1.706,0.47,3,13\\n2010-09-11T21:25:01.60Z,53.6309181,-114.1806796,1923.960,-17.92,4.18,6.61,1.133,1.683,0.47,3,13\\n2010-09-11T21:25:01.80Z,53.6308861,-114.1806673,1922.773,-17.90,4.18,6.49,1.125,1.661,0.46,3,13\\n2010-09-11T21:25:02.00Z,53.6308542,-114.1806544,1921.526,-17.90,4.11,6.42,1.117,1.640,0.45,3,13\\n2010-09-11T21:25:02.20Z,53.6308223,-114.1806416,1920.275,-17.87,4.21,6.37,1.108,1.619,0.45,3,13\\n2010-09-11T21:25:02.40Z,53.6307905,-114.1806288,1919.047,-17.75,4.26,6.31,1.101,1.602,0.48,3,13\\n2010-09-11T21:25:02.60Z,53.6307587,-114.1806154,1917.811,-17.73,4.49,6.29,1.094,1.589,0.48,3,13\\n2010-09-11T21:25:02.80Z,53.6307264,-114.1806011,1916.559,-17.84,4.71,6.33,1.090,1.594,0.48,3,13\\n2010-09-11T21:25:03.00Z,53.6306941,-114.1805859,1915.326,-17.92,5.14,6.32,1.087,1.613,0.50,3,13\\n2010-09-11T21:25:03.20Z,53.6306619,-114.1805699,1914.071,-17.86,5.34,6.29,1.086,1.635,0.50,3,13\\n2010-09-11T21:25:03.40Z,53.6306294,-114.1805535,1912.853,-17.99,5.49,6.29,1.086,1.646,0.52,3,13\\n2010-09-11T21:25:03.60Z,53.6305973,-114.1805358,1911.657,-17.80,6.10,6.24,1.087,1.645,0.53,3,13\\n2010-09-11T21:25:03.80Z,53.6305654,-114.1805164,1910.398,-17.75,6.54,6.21,1.091,1.646,0.56,3,13\\n2010-09-11T21:25:04.00Z,53.6305335,-114.1804960,1909.150,-17.72,6.82,6.20,1.098,1.645,0.56,3,13\\n2010-09-11T21:25:04.20Z,53.6305015,-114.1804750,1907.914,-17.79,7.04,6.19,1.106,1.645,0.57,3,13\\n2010-09-11T21:25:04.40Z,53.6304696,-114.1804530,1906.640,-17.82,7.32,6.21,1.114,1.644,0.57,3,13\\n2010-09-11T21:25:04.60Z,53.6304378,-114.1804301,1905.380,-17.78,7.68,6.24,1.117,1.646,0.54,3,13\\n2010-09-11T21:25:04.80Z,53.6304061,-114.1804066,1904.143,-17.77,7.87,6.21,1.121,1.683,0.52,3,13\\n2010-09-11T21:25:05.00Z,53.6303742,-114.1803826,1902.880,-17.82,7.91,6.27,1.123,1.721,0.52,3,13\\n2010-09-11T21:25:05.20Z,53.6303422,-114.1803586,1901.564,-17.76,7.90,6.34,1.122,1.743,0.52,3,13\\n2010-09-11T21:25:05.40Z,53.6303101,-114.1803348,1900.214,-17.85,7.72,6.41,1.119,1.759,0.51,3,13\\n2010-09-11T21:25:05.60Z,53.6302783,-114.1803110,1898.893,-17.79,7.81,6.48,1.116,1.774,0.51,3,13\\n2010-09-11T21:25:05.80Z,53.6302465,-114.1802872,1897.533,-17.68,7.94,6.58,1.113,1.785,0.50,3,13\\n2010-09-11T21:25:06.00Z,53.6302145,-114.1802639,1896.095,-17.80,7.66,6.76,1.107,1.781,0.49,3,13\\n2010-09-11T21:25:06.20Z,53.6301822,-114.1802414,1894.605,-17.90,7.33,7.00,1.101,1.773,0.50,3,13\\n2010-09-11T21:25:06.40Z,53.6301497,-114.1802199,1893.057,-18.07,6.89,7.27,1.094,1.759,0.48,3,13\\n2010-09-11T21:25:06.60Z,53.6301169,-114.1801990,1891.403,-18.17,6.79,7.56,1.088,1.743,0.49,3,13\\n2010-09-11T21:25:06.80Z,53.6300838,-114.1801778,1889.680,-18.29,6.81,7.90,1.094,1.737,0.56,3,13\\n2010-09-11T21:25:07.00Z,53.6300511,-114.1801572,1888.027,-18.13,6.72,8.03,1.118,1.768,0.63,3,13\\n2010-09-11T21:25:07.20Z,53.6300185,-114.1801369,1886.339,-18.06,6.61,8.16,1.157,1.813,0.69,3,13\\n2010-09-11T21:25:07.40Z,53.6299853,-114.1801172,1884.615,-18.35,6.44,8.30,1.208,1.869,0.71,3,13\\n2010-09-11T21:25:07.60Z,53.6299513,-114.1800988,1882.812,-18.81,6.15,8.43,1.246,1.919,0.66,3,13\\n2010-09-11T21:25:07.80Z,53.6299166,-114.1800811,1880.944,-19.06,5.91,8.56,1.273,1.966,0.59,3,13\\n2010-09-11T21:25:08.00Z,53.6298817,-114.1800640,1879.004,-19.13,5.70,8.74,1.279,1.988,0.56,3,13\\n2010-09-11T21:25:08.20Z,53.6298465,-114.1800471,1876.948,-19.34,5.62,8.92,1.274,1.992,0.54,3,13\\n2010-09-11T21:25:08.40Z,53.6298107,-114.1800303,1874.861,-19.56,5.48,9.13,1.266,1.993,0.54,3,13\\n2010-09-11T21:25:08.60Z,53.6297745,-114.1800145,1872.656,-19.75,5.05,9.52,1.256,1.974,0.53,3,13\\n2010-09-11T21:25:08.80Z,53.6297380,-114.1799995,1870.504,-20.07,4.87,9.77,1.251,1.954,0.53,3,13\\n2010-09-11T21:25:09.00Z,53.6297011,-114.1799852,1868.334,-20.36,4.76,9.92,1.247,1.935,0.54,3,13\"","import { useRef } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport * as Sentry from '@sentry/react';\nimport { Unit } from './lib/types';\n\nimport styles from './Load.module.css';\n\nimport sampleCsv from './test.csv?raw';\n\nexport const Load: React.VFC<{ onLoad: (csv: string) => void; setUnit: (unit: Unit) => void }> = Sentry.withProfiler(\n    ({ onLoad, setUnit }) => {\n        const fileInputRef = useRef<HTMLInputElement>(null);\n\n        return (\n            <div className={styles.Load}>\n                <Helmet>\n                    <meta name=\"theme-color\" content=\"#f0fbff\" />\n                </Helmet>\n\n                <div className={styles.Dialog}>\n                    <div className={styles.DialogTitle}>Load FlySight CSV</div>\n\n                    <div className={styles.UnitSelect}>\n                        <label htmlFor=\"input-unit\">Units</label>\n                        <select id=\"input-unit\" onChange={(e) => setUnit(e.target.value as unknown as Unit)}>\n                            <option value={Unit.Imperial}>Imperial (mph)</option>\n                            <option value={Unit.Metric}>Metric (km/h)</option>\n                        </select>\n                    </div>\n\n                    <div\n                        className={styles.DropArea}\n                        onClick={(e) => {\n                            fileInputRef.current?.click();\n                        }}\n                    >\n                        <div>Press to select file</div>\n                        <input\n                            style={{ display: 'none' }}\n                            ref={fileInputRef}\n                            type=\"file\"\n                            accept=\".csv\"\n                            className={styles.FileInput}\n                            onChange={async (e) => {\n                                const file = e.target.files?.[0];\n                                if (file) {\n                                    const csv = await file.text();\n                                    onLoad(csv);\n                                }\n                            }}\n                        />\n                    </div>\n\n                    <a\n                        href=\"#\"\n                        className={styles.Link}\n                        onClick={(e) => {\n                            e.preventDefault();\n                            onLoad(sampleCsv);\n                        }}\n                    >\n                        Load Sample\n                    </a>\n                </div>\n            </div>\n        );\n    }\n);\n","import { useEffect, useRef, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport * as Sentry from '@sentry/react';\nimport { useRerender } from '@react-hookz/web';\n\nimport { Track } from './lib/Track';\nimport { Map } from './Map';\nimport { Unit } from './lib/types';\nimport { Chart } from './Chart2';\n\nimport styles from './App.module.css';\nimport { Load } from './Load';\n\nimport devCsv from './test.csv?raw';\n\nexport const App: React.VFC = Sentry.withErrorBoundary(\n    Sentry.withProfiler(() => {\n        const rerender = useRerender();\n        const trackRef = useRef<Track>();\n\n        const [activeDatapointIndex, setActiveDatapointIndex] = useState<number | null>(null);\n        const [csv, setCsv] = useState<string | null>(import.meta.env.DEV ? devCsv : null);\n        const [unit, setUnit] = useState(Unit.Imperial);\n\n        useEffect(() => {\n            if (trackRef.current || !csv) return;\n            const track = new Track();\n            track.importFromText(csv);\n\n            trackRef.current = track;\n            rerender();\n\n            return () => {\n                trackRef.current = undefined;\n            };\n        }, [csv]);\n\n        return (\n            <div className={styles.App}>\n                {trackRef.current ? (\n                    <div className={styles.ChartMap}>\n                        <Helmet>\n                            <meta name=\"theme-color\" content=\"#fff\" />\n                        </Helmet>\n                        <Chart\n                            track={trackRef.current}\n                            unit={unit}\n                            setActiveDatapointIndex={(index) => setActiveDatapointIndex(index)}\n                        />\n                        <Map track={trackRef.current} activeDatapointIndex={activeDatapointIndex} />\n                    </div>\n                ) : (\n                    <Load\n                        onLoad={(newCsv) => {\n                            trackRef.current = undefined;\n                            setCsv(newCsv);\n                        }}\n                        setUnit={setUnit}\n                    />\n                )}\n            </div>\n        );\n    }),\n    {\n        showDialog: true,\n    }\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HelmetProvider } from 'react-helmet-async';\nimport * as Sentry from '@sentry/react';\nimport { BrowserTracing } from '@sentry/tracing';\n\nimport { App } from './App';\n\nimport 'normalize.css/normalize.css';\nimport './index.css';\n\nSentry.init({\n    dsn: 'https://975c9c3321074313ab41c1380cbf4c3c@o1200738.ingest.sentry.io/6324846',\n    integrations: [new BrowserTracing()],\n    tracesSampleRate: 1.0,\n});\n\nconst rootElement = document.getElementById('root');\nif (!rootElement) {\n    throw new Error('Missing root element!');\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <HelmetProvider>\n            <App />\n        </HelmetProvider>\n    </React.StrictMode>,\n    rootElement\n);\n"],"names":["Map","Sentry","track","activeDatapointIndex","rerender","useRerender","elRef","useRef","olRef","dotRef","datapoint","current","getSource","forEachFeature","feature","coords","fromLonLat","lon","lat","getGeometry","setCoordinates","useEffect","console","log","LayerVector","source","SourceVector","features","OpenLayersFeature","geometry","GeomPoint","name","setStyle","StyleStyle","image","StyleCircle","fill","StyleFill","color","stroke","StyleStroke","width","radius","addLayer","dispose","undefined","datapoints","moveMarkerToDatapoint","useMountEffect","info","firstDatapoint","OpenLayersMap","target","layers","LayerTile","SourceXYZ","url","maxZoom","attributions","view","OpenLayersView","center","zoom","lineStyle","line","map","i","nextDatapoint","start","end","GeomLineString","setId","extent","getExtent","getView","fit","padding","moveMarker","e","dragging","forEachFeatureAtPixel","pixel","layer","featureIndex","getId","hitTolerance","layerFilter","on","height","ChartJS","register","zoomPlugin","LineController","LineElement","LinearScale","PointElement","Title","CategoryScale","Tooltip","defaults","elements","borderWidth","point","pointStyle","hoverBorderWidth","rotation","hoverRadius","hoverBorderColor","backgroundColor","borderColor","Chart","unit","setActiveDatapointIndex","lastX","elevationData","useMemo","d","x","y","elevation","horizontalSpeedData","horizontalSpeed","verticalSpeedData","verticalSpeed","glideRatioData","glideRatio","elevationMax","Math","max","speedMin","floor","min","speedMax","ceil","glideRatioMin","glideRatioMax","data","labels","datasets","label","yAxisID","options","responsive","maintainAspectRatio","parsing","normalized","interaction","mode","intersect","animation","plugins","decimation","enabled","algorithm","limits","minRange","pan","wheel","pinch","drag","modifierKey","scales","type","display","position","title","text","y1","grid","drawOnChartArea","y2","y3","id","beforeEvent","chart","args","pluginOptions","event","rect","canvas","getBoundingClientRect","left","chartArea","right","dataX","getValueForPixel","styles","Load","onLoad","setUnit","fileInputRef","_jsx","Helmet","_jsxs","Dialog","DialogTitle","UnitSelect","value","Unit","Imperial","Metric","DropArea","click","FileInput","file","files","csv","Link","preventDefault","sampleCsv","App","trackRef","useState","setCsv","Track","importFromText","ChartMap","index","newCsv","showDialog","dsn","integrations","BrowserTracing","tracesSampleRate","rootElement","document","getElementById","Error","ReactDOM","render","HelmetProvider"],"mappings":"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"}